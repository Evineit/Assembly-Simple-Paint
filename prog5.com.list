EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
prog5.com -- emu8086 assembler version: 4.04  
 
[ 04/12/2020  --  01:58:26 a. m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;Programa 5.- Enciende un PIXEL en la posición del click izquierdo (simulación LAPIZ)
[   2]        :                                       org 0100h
[   3]    0100: 00 00                                 col dw ?
[   4]    0102: 00 00                                 ren dw ?
[   5]    0104:                                       .code
[   6]        :                                       ponpix macro c r ;Macro que recibe dos parámetros, en C y en R
[   7]        :                                       mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
[   8]        :                                       mov al,00001010b ;AL=Atributos de color, parte baja: 1010b=10d=Color Verde (vea Paleta de Color)
[   9]        :                                       mov cx,c ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
[  10]        :                                       mov dx,r ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
[  11]        :                                       int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
[  12]        :                                       endm
[  13]        :                                       ;Inicio del Programa Principal
[  14]    0104: E8 44 00                              call inigraf ;Llama al procedimiento para iniciar graficos
[  15]    0107: E8 35 00                              call prende ;Llama al procedimiento para prender el raton
[  16]    010A:                                       eti0:
[  17]    010A: B8 03 00                              mov ax,3d
[  18]    010D: CD 33                                 int 33h ;Detecta coordenadas y boton oprimido
[  19]    010F: 83 FB 00                              cmp bx,0d
[  20]    0112: 74 F6                                 je eti0 ;Mientras NO se oprima ningun boton, se cicla
[  21]    0114: 83 FB 01                              cmp bx,1d
[  22]    0117: 75 1E                                 jne fin ;El programa termina si se oprime el boton derecho o los 2 botones
[  23]    0119: 89 0E 00 01                           mov col,cx ;Carga en COL el valor de la columna
[  24]    011D: 89 16 02 01                           mov ren,dx ;Carga en REN el valor del renglon
[  25]    0121: E8 21 00                              call apaga ;Llama al procedimiento APAGA para apagar el raton
[  26]    0124: B4 0C B0 0A 8B 0E 00 01 8B 16 02 01   ponpix col ren ;Llama a la macro PONPIX para desplegar PIXEL
                CD 10                               
[  27]    0132: E8 0A 00                              call prende ;Llama al procedimiento PRENDE para prender el raton
[  28]    0135: EB D3                                 jmp eti0 ;Salta incondicionalmente a ETI0 y se cicla para esperar a que se oprima un boton
[  29]    0137:                                       fin:
[  30]    0137: E8 0B 00                              call apaga ;Apaga raton
[  31]    013A: E8 15 00                              call cierragraf ;Cierra graficos
[  32]    013D: CD 20                                 int 20h ;Termina el programa
[  33]        :                                       
[  34]        :                                       ;Inicia Zona de Procedimientos
[  35]    013F:                                       prende proc
[  36]    013F: B8 01 00                              mov ax,1d
[  37]    0142: CD 33                                 int 33h
[  38]    0144: C3                                    ret
[  39]        :                                       endp
[  40]    0145:                                       apaga proc
[  41]    0145: B8 02 00                              mov ax,2d
[  42]    0148: CD 33                                 int 33h
[  43]    014A: C3                                    ret
[  44]        :                                       endp
[  45]    014B:                                       inigraf proc
[  46]    014B: B4 00                                 mov ah,0d
[  47]    014D: B0 12                                 mov al,18d
[  48]    014F: CD 10                                 int 10h
[  49]    0151: C3                                    ret
[  50]        :                                       endp
[  51]    0152:                                       cierragraf proc
[  52]    0152: B4 00                                 mov ah,0d
[  53]    0154: B0 03                                 mov al,3d
[  54]    0156: CD 10                                 int 10h
[  55]    0158: C3                                    ret
[  56]        :                                       endp
[  57]        :                                       
[  58]        :                                       
 
===================================================================================================
 




===================================================================================================
