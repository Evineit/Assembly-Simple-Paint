UASM v2.49, Jun 21 2019, Masm-compatible assembler.

prog12.asm
00000000                        CSEG    SEGMENT     ; code segment starts here.
                                    org 100h
00000100  EB60                      jmp eti0
                                ;Zona de declaracion de Cadenas e Identificadores creados por el usuario (variables)
                                .data
00000102  4572726F722C206172    cad db 'Error, archivo no encontrado!...presione una tecla para terminar.$'
00000144  433A5C696D6167656E    filename db "C:\imagen.bmp" ;Unidad Logica, Ruta, Nombre y Extension del archivo de imagen a utilizar
00000151  0000                  handle dw ? ;DW=Define Word, para almacenar valores entre 0 y 65535, o sea 16 bits
00000153  0000                  col dw 0 ;COL=0
00000155  DF01                  ren dw 479 ;REN=479d
                                ; afueras db 0
00000157  00                    buffer db ? ;DB=Define Byte, para almacenar valores entre 0 y 255, o sea 8 bits
00000158  00                    colo db ? ; ? = Valor NO definido de inicio
                                ; Cual herramienta se esta usando
00000159  01                    tool db 1
                                ; Datos para cuadro
0000015A  0000                  col1 dw ?
0000015C  0000                  ren1 dw ?
0000015E  0000                  col2 dw ?
00000160  0000                  ren2 dw ?
                                ; Macro para mostrar posicion de mouse
                                numero macro num
 >                               mov ax,num
 >                               mov bl,100d
 >                               div bl
 >                               mov dl,al
 >                               add dl,30h
 >                               push ax
 >                               mov ah,02h
 >                               int 21h
 >                               pop ax
 >                               shr ax,8
 >                               mov bl,10d
 >                               div bl
 >                               mov dl,al
 >                               add dl,30h
 >                               push ax
 >                               mov ah,02h
 >                               int 21h
 >                               pop ax
 >                               shr ax,8 
 >                               mov dl,al
 >                               add dl,30h
 >                               mov ah,02h
 >                               int 21h
 >                               endm
                                ;**************************************************************************************************************************
                                .code
00000162                        eti0:
00000162  B43D                      mov ah,3dh ;Funcion 3DH, abre un archivo existente
00000164  B000                      mov al,0 ;AL=Modos de Acceso, 0=Solo Lectura, 1=Escritura, 2=Lectura/Escritura
00000166  BA0000                    mov dx,offset filename ;DX=Direccion de la cadena de RUTA
00000169  CD21                      int 21h ;INT 21H función 3DH, abre un archivo. Esta funcion altera la bandera CF (Carry
                                    ;Flag), si el archivo se pudo abrir sin error CF=0, y en AX esta el Manejador de Archivo
                                    ;(Handle), caso contrario CF=1, y en AX esta el codigo de error
0000016B  7303E9B100                jc err ;Si hay error, salta a la etiqueta ERR
00000170  2EA30000                  mov handle,ax ;Caso contrario HANDLE=Manejador de Archivo
                                ;*************************************************************************************************************************
00000174  B97600                    mov cx,118d ;Se prepara ciclo de 118 vueltas (Para leer archivo en formato BMP)
00000177                        eti1:
00000177  51                     push cx
00000178  B43F                   mov ah,3fh ;3FH=Leer del archivo
0000017A  2E8B1E0000             mov bx,handle
0000017F  BA0000                 mov dx,offset buffer
00000182  B90100                 mov cx,1 ;CX=Numero de Bytes a leer
00000185  CD21                   int 21h ;INT 21H funcion 3FH, leer del archivo
00000187  59                     pop cx
00000188  E2ED                   loop eti1
                                ;*************************************************************************************************************************
0000018A  B400                   mov ah,00h ;Funcion 00H para la INT 10H (Resolucion de Pantalla)
0000018C  B012                   mov al,12h ;AL=Modo de despliegue o resolución, 12h = 640x480 a 16 colores
0000018E  CD10                   int 10h ;INT 10H funcion 00H, inicializar resolucion
                                 ;***********************************************************************************************************************
00000190                        eti2:
00000190  B43F                   mov ah,3fh ;3FH=Leer del archivo
00000192  2E8B1E0000             mov bx,handle
00000197  BA0000                 mov dx,offset buffer
0000019A  B90100                 mov cx,1
0000019D  CD21                   int 21h ;INT 21H funcion 3FH, leer del archivo. En BUFFER se almacenaran los datos leidos

0000019F  2EA00000               mov al,buffer ;AL=BUFFER, en los 4 bits superiores esta el color de un PRIMER Pixel
000001A3  24F0                   and al,11110000b
000001A5  C0C804                 ror al,4
000001A8  2EA20000               mov colo,al ;COLO=Color de un PRIMER Pixel
000001AC  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001AE  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001B2  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001B7  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001BC  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX

000001BE  2EA00000               mov al,buffer ;AL=BUFFER, en los 4 bits inferiores esta el color de un SEGUNDO Pixel
000001C2  240F                   and al,00001111b
000001C4  2EA20000               mov colo,al ;COLO=Color de un SEGUNDO Pixel
000001C8  2EFF060000             inc col
000001CD  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001CF  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001D3  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001D8  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001DD  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX
000001DF  2EFF060000             inc col ;Se debe desplegar otro Pixel para dar FORMATO a la imagen
000001E4  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001E6  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001EA  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001EF  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001F4  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX

000001F6  2E813E00007F02         cmp col,639d
000001FD  7691                   jbe eti2 ;JBE=Jump if Below or Equal (salta si esta abajo o si es igual)

000001FF  2EC70600000000         mov col,0
00000206  2EFF0E0000             dec ren
0000020B  2E833E0000FF           cmp ren,-1 ;Se compara con -1 para llegar hasta el ultimo renglon, que es el CERO
00000211  7403E97AFF             jne eti2 ;JNE=Jump if Not Equal (salta si no es igual)
00000216  2EC606000004           mov colo,04h
0000021C  E8C104                 call curcolor
                                 
0000021F  EB0E                   jmp start ; jumps to drawing section
                                ;***********************************************************************************************************************
00000221                        err: ;Se llega hasta aqui solo si hay error en la lectura del archivo
00000221  B409                   mov ah,09h
00000223  8D160000               lea dx,cad
00000227  CD21                   int 21h ;Despliega cad
00000229  B407                   mov ah,07h
0000022B  CD21                   int 21h ;Espera a que se oprima tecla
0000022D  CD20                   int 20h ;Fin del Programa (Cuando NO se carga la imagen)
                                ;  Macros
                                spraypix macro ren,col
 >                               mov ah,0Ch ;Funcion 0Ch para pintar o desplegar PIXEL
 >                               mov al,colo ;AL=Atributos de color, parte baja
 >                               mov cx,ren ;Cx=Columna donde se despliega PIXEL
 >                               mov dx,col ;Dx=Renglon donde se despliega PIXEL
 >                               push cx
 >                               int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
 >                               add cx,2d
 >                               int 10h
 >                               add cx,2d
 >                               int 10h
 >                               add cx,2d
 >                               int 10h
 >                               pop cx
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               endm
                                ponpix macro co,re ;Macro que recibe dos parámetros, en C y en R
 >                               mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL ;Macro que recibe dos parámetros, en C y en R
 >                               mov al,colo ;AL=Atributos de color, parte baja ;Macro que recibe dos parámetros, en C y en R
 >                               mov cx,co ;Cx=Columna donde se despliega PIXEL (empieza desde cero) ;Macro que recibe dos parámetros, en C y en R
 >                               mov dx,re ;Dx=Renglon donde se despliega PIXEL (empieza desde cero) ;Macro que recibe dos parámetros, en C y en R
 >                               int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon) ;Macro que recibe dos parámetros, en C y en R
 >                               endm ;Macro que recibe dos parámetros, en C y en R
                                borpix macro ren, col
 >                                  mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
 >                                  mov al,0fh ;AL=Atributos de color, parte baja : Blanco como el panel de fondo
 >                                  mov cx,ren ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
 >                                  mov dx,col ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
 >                                  int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  endm
                                    
                                ;Inicio del Programa Principal
0000022F                        start:
0000022F                        etip:
0000022F  E8BF05                    call prende ;Llama al procedimiento para prender el raton
                                    ; Muestra posicion en X y Y
                                    ; Define en que posicion se mostrara
00000232  2E890E0000                mov col, cx
00000237  2E89160000                mov ren, dx
0000023C  B402                      mov ah,02h
0000023E  B200                      mov dl, 0d
00000240  B600                      mov dh, 0d
00000242  CD10                      int 10h
                                    ; Los escribe en pantalla con un espacio de separacion
                                    numero col
00000244  2EA10000           1   mov ax,col
00000248  B364               1   mov bl,100d
0000024A  F6F3               1   div bl
0000024C  8AD0               1   mov dl,al
0000024E  80C230             1   add dl,30h
00000251  50                 1   push ax
00000252  B402               1   mov ah,02h
00000254  CD21               1   int 21h
00000256  58                 1   pop ax
00000257  C1E808             1   shr ax,8
0000025A  B30A               1   mov bl,10d
0000025C  F6F3               1   div bl
0000025E  8AD0               1   mov dl,al
00000260  80C230             1   add dl,30h
00000263  50                 1   push ax
00000264  B402               1   mov ah,02h
00000266  CD21               1   int 21h
00000268  58                 1   pop ax
00000269  C1E808             1   shr ax,8 
0000026C  8AD0               1   mov dl,al
0000026E  80C230             1   add dl,30h
00000271  B402               1   mov ah,02h
00000273  CD21               1   int 21h
00000275  B402                      mov ah,02h
00000277  B220                      mov dl,' ' ;Mover a DL un espacio en blanco
00000279  CD21                      int 21h
                                    numero ren
0000027B  2EA10000           1   mov ax,ren
0000027F  B364               1   mov bl,100d
00000281  F6F3               1   div bl
00000283  8AD0               1   mov dl,al
00000285  80C230             1   add dl,30h
00000288  50                 1   push ax
00000289  B402               1   mov ah,02h
0000028B  CD21               1   int 21h
0000028D  58                 1   pop ax
0000028E  C1E808             1   shr ax,8
00000291  B30A               1   mov bl,10d
00000293  F6F3               1   div bl
00000295  8AD0               1   mov dl,al
00000297  80C230             1   add dl,30h
0000029A  50                 1   push ax
0000029B  B402               1   mov ah,02h
0000029D  CD21               1   int 21h
0000029F  58                 1   pop ax
000002A0  C1E808             1   shr ax,8 
000002A3  8AD0               1   mov dl,al
000002A5  80C230             1   add dl,30h
000002A8  B402               1   mov ah,02h
000002AA  CD21               1   int 21h
000002AC                        eti10:
000002AC  B80300                    mov ax,3d
000002AF  CD33                      int 33h ;Detecta coordenadas y boton oprimido
000002B1  83FB00                    cmp bx,0d
000002B4  7503E976FF                je etip ;Mientras NO se oprima ningun boton, se cicla
000002B9  83FB01                    cmp bx,1d
000002BC  75EE                      jne eti10 ;El programa regresa a eti10 si no es boton izq
                                    
                                    ; Solo puede pintar en el cuadro blanco
000002BE  81F9B200                  cmp cx,178d
000002C2  7214                      jb eticolor0 ;JB=Jump if Below (Brinca si esta abajo)
000002C4  81F97102                  cmp cx,625d
000002C8  770E                      ja eticolor0 ;JA=Jmp if Above (Brinca si esta arriba)
000002CA  81FA9801                  cmp dx,408d
000002CE  7708                      ja eticolor0
000002D0  83FA0F                    cmp dx,15d
000002D3  7203                      jb eticolor0
000002D5  E9F802                    jmp draw
000002D8                        eticolor0:
000002D8  81FAB901                  cmp dx,441d
000002DC  721C                      jb eticolor1 ;JB=Jump if Below (Brinca si esta abajo)
000002DE  81FAD501                  cmp dx,469d
000002E2  7716                      ja eticolor1 ;JA=Jmp if Above (Brinca si esta arriba)
000002E4  83F924                    cmp cx,36d
000002E7  7711                      ja eticolor1
000002E9  83F908                    cmp cx,8d
000002EC  720C                      jb eticolor1
000002EE  2EC606000000              mov colo, 00h
000002F4  E8E903                    call curcolor 
                                    ; actualcolor
000002F7  E935FF                    jmp etip

000002FA                        eticolor1:
000002FA  81FAB901                  cmp dx,441d
000002FE  721C                      jb eticolor2 ;JB=Jump if Below (Brinca si esta abajo)
00000300  81FAD501                  cmp dx,469d
00000304  7716                      ja eticolor2 ;JA=Jmp if Above (Brinca si esta arriba)
00000306  83F942                    cmp cx,66d
00000309  7711                      ja eticolor2
0000030B  83F926                    cmp cx,38d
0000030E  720C                      jb eticolor2
00000310  2EC606000004              mov colo, 04h
00000316  E8C703                    call curcolor 
                                    ; actualcolor
00000319  E913FF                    jmp etip
0000031C                        eticolor2:
0000031C  81FAB901                  cmp dx,441d
00000320  721C                      jb eticolor3 ;JB=Jump if Below (Brinca si esta abajo)
00000322  81FAD501                  cmp dx,469d
00000326  7716                      ja eticolor3 ;JA=Jmp if Above (Brinca si esta arriba)
00000328  83F960                    cmp cx,96d
0000032B  7711                      ja eticolor3
0000032D  83F944                    cmp cx,68d
00000330  720C                      jb eticolor3
00000332  2EC606000002              mov colo, 02h
00000338  E8A503                    call curcolor 
                                    ; actualcolor
0000033B  E9F1FE                    jmp etip
0000033E                        eticolor3:
0000033E  81FAB901                  cmp dx,441d
00000342  721C                      jb eticolor4 ;JB=Jump if Below (Brinca si esta abajo)
00000344  81FAD501                  cmp dx,469d
00000348  7716                      ja eticolor4 ;JA=Jmp if Above (Brinca si esta arriba)
0000034A  83F97E                    cmp cx,126d
0000034D  7711                      ja eticolor4
0000034F  83F962                    cmp cx,98d
00000352  720C                      jb eticolor4
00000354  2EC606000006              mov colo, 06h
0000035A  E88303                    call curcolor 
                                    ; actualcolor
0000035D  E9CFFE                    jmp etip
00000360                        eticolor4:
00000360  81FAB901                  cmp dx,441d
00000364  721E                      jb eticolor5 ;JB=Jump if Below (Brinca si esta abajo)
00000366  81FAD501                  cmp dx,469d
0000036A  7718                      ja eticolor5 ;JA=Jmp if Above (Brinca si esta arriba)
0000036C  81F99C00                  cmp cx,156d
00000370  7712                      ja eticolor5
00000372  81F98000                  cmp cx,128d
00000376  720C                      jb eticolor5
00000378  2EC606000001              mov colo, 01h
0000037E  E85F03                    call curcolor 
                                    ; actualcolor
00000381  E9ABFE                    jmp etip
00000384                        eticolor5:
00000384  81FAB901                  cmp dx,441d
00000388  721E                      jb eticolor6 ;JB=Jump if Below (Brinca si esta abajo)
0000038A  81FAD501                  cmp dx,469d
0000038E  7718                      ja eticolor6 ;JA=Jmp if Above (Brinca si esta arriba)
00000390  81F9BA00                  cmp cx,186d
00000394  7712                      ja eticolor6
00000396  81F99E00                  cmp cx,158d
0000039A  720C                      jb eticolor6
0000039C  2EC606000005              mov colo, 05h
000003A2  E83B03                    call curcolor 
000003A5  E987FE                    jmp etip
000003A8                        eticolor6:
000003A8  81FAB901                  cmp dx,441d
000003AC  721E                      jb eticolor7 ;JB=Jump if Below (Brinca si esta abajo)
000003AE  81FAD501                  cmp dx,469d
000003B2  7718                      ja eticolor7 ;JA=Jmp if Above (Brinca si esta arriba)
000003B4  81F9D800                  cmp cx,216d
000003B8  7712                      ja eticolor7
000003BA  81F9BC00                  cmp cx,188d
000003BE  720C                      jb eticolor7
000003C0  2EC606000003              mov colo, 03h
000003C6  E81703                    call curcolor 
000003C9  E963FE                    jmp etip
000003CC                        eticolor7:
000003CC  81FAB901                  cmp dx,441d
000003D0  721E                      jb eticolor8 ;JB=Jump if Below (Brinca si esta abajo)
000003D2  81FAD501                  cmp dx,469d
000003D6  7718                      ja eticolor8 ;JA=Jmp if Above (Brinca si esta arriba)
000003D8  81F9F600                  cmp cx,246d
000003DC  7712                      ja eticolor8
000003DE  81F9DA00                  cmp cx,218d
000003E2  720C                      jb eticolor8
000003E4  2EC606000008              mov colo, 08h
000003EA  E8F302                    call curcolor 
000003ED  E93FFE                    jmp etip
000003F0                        eticolor8:
000003F0  81FAB901                  cmp dx,441d
000003F4  721E                      jb eticolor9 ;JB=Jump if Below (Brinca si esta abajo)
000003F6  81FAD501                  cmp dx,469d
000003FA  7718                      ja eticolor9 ;JA=Jmp if Above (Brinca si esta arriba)
000003FC  81F91401                  cmp cx,276d
00000400  7712                      ja eticolor9
00000402  81F9F800                  cmp cx,248d
00000406  720C                      jb eticolor9
00000408  2EC606000007              mov colo, 07h
0000040E  E8CF02                    call curcolor 
00000411  E91BFE                    jmp etip
00000414                        eticolor9:
00000414  81FAB901                  cmp dx,441d
00000418  721E                      jb eticolor10 ;JB=Jump if Below (Brinca si esta abajo)
0000041A  81FAD501                  cmp dx,469d
0000041E  7718                      ja eticolor10 ;JA=Jmp if Above (Brinca si esta arriba)
00000420  81F93201                  cmp cx,306d
00000424  7712                      ja eticolor10
00000426  81F91601                  cmp cx,278d
0000042A  720C                      jb eticolor10
0000042C  2EC60600000C              mov colo, 0Ch
00000432  E8AB02                    call curcolor 
00000435  E9F7FD                    jmp etip
00000438                        eticolor10:
00000438  81FAB901                  cmp dx,441d
0000043C  721E                      jb eticolor11 ;JB=Jump if Below (Brinca si esta abajo)
0000043E  81FAD501                  cmp dx,469d
00000442  7718                      ja eticolor11 ;JA=Jmp if Above (Brinca si esta arriba)
00000444  81F95001                  cmp cx,336d
00000448  7712                      ja eticolor11
0000044A  81F93401                  cmp cx,308d
0000044E  720C                      jb eticolor11
00000450  2EC60600000A              mov colo, 0ah
00000456  E88702                    call curcolor 
00000459  E9D3FD                    jmp etip
0000045C                        eticolor11:
0000045C  81FAB901                  cmp dx,441d
00000460  721E                      jb eticolor12 ;JB=Jump if Below (Brinca si esta abajo)
00000462  81FAD501                  cmp dx,469d
00000466  7718                      ja eticolor12 ;JA=Jmp if Above (Brinca si esta arriba)
00000468  81F96E01                  cmp cx,366d
0000046C  7712                      ja eticolor12
0000046E  81F95201                  cmp cx,338d
00000472  720C                      jb eticolor12
00000474  2EC60600000E              mov colo, 0eh
0000047A  E86302                    call curcolor 
0000047D  E9AFFD                    jmp etip
00000480                        eticolor12:
00000480  81FAB901                  cmp dx,441d
00000484  721E                      jb eticolor13 ;JB=Jump if Below (Brinca si esta abajo)
00000486  81FAD501                  cmp dx,469d
0000048A  7718                      ja eticolor13 ;JA=Jmp if Above (Brinca si esta arriba)
0000048C  81F98C01                  cmp cx,396d
00000490  7712                      ja eticolor13
00000492  81F97001                  cmp cx,368d
00000496  720C                      jb eticolor13
00000498  2EC606000009              mov colo, 09h
0000049E  E83F02                    call curcolor 
000004A1  E98BFD                    jmp etip
000004A4                        eticolor13:
000004A4  81FAB901                  cmp dx,441d
000004A8  721E                      jb eticolor14 ;JB=Jump if Below (Brinca si esta abajo)
000004AA  81FAD501                  cmp dx,469d
000004AE  7718                      ja eticolor14 ;JA=Jmp if Above (Brinca si esta arriba)
000004B0  81F9AA01                  cmp cx,426d
000004B4  7712                      ja eticolor14
000004B6  81F98E01                  cmp cx,398d
000004BA  720C                      jb eticolor14
000004BC  2EC60600000D              mov colo, 0dh
000004C2  E81B02                    call curcolor 
000004C5  E967FD                    jmp etip
000004C8                        eticolor14:
000004C8  81FAB901                  cmp dx,441d
000004CC  721E                      jb eticolor15 ;JB=Jump if Below (Brinca si esta abajo)
000004CE  81FAD501                  cmp dx,469d
000004D2  7718                      ja eticolor15 ;JA=Jmp if Above (Brinca si esta arriba)
000004D4  81F9C801                  cmp cx,456d
000004D8  7712                      ja eticolor15
000004DA  81F9AC01                  cmp cx,428d
000004DE  720C                      jb eticolor15
000004E0  2EC60600000B              mov colo, 0bh
000004E6  E8F701                    call curcolor 
000004E9  E943FD                    jmp etip
000004EC                        eticolor15:
000004EC  81FAB901                  cmp dx,441d
000004F0  721E                      jb etiexitbut ;JB=Jump if Below (Brinca si esta abajo)
000004F2  81FAD501                  cmp dx,469d
000004F6  7718                      ja etiexitbut ;JA=Jmp if Above (Brinca si esta arriba)
000004F8  81F9E601                  cmp cx,486d
000004FC  7712                      ja etiexitbut
000004FE  81F9CA01                  cmp cx,458d
00000502  720C                      jb etiexitbut
00000504  2EC60600000F              mov colo, 0fh
0000050A  E8D301                    call curcolor 
0000050D  E91FFD                    jmp etip
00000510                        etiexitbut:
00000510  81FAAC01                  cmp dx,428d
00000514  7215                      jb etitool1 ;JB=Jump if Below (Brinca si esta abajo)
00000516  81FAD601                  cmp dx,470d
0000051A  770F                      ja etitool1 ;JA=Jmp if Above (Brinca si esta arriba)
0000051C  81F96C02                  cmp cx,620d
00000520  7709                      ja etitool1
00000522  81F94202                  cmp cx,578d
00000526  7203                      jb etitool1
00000528  E98601                    jmp fin
0000052B                        etitool1:
0000052B  83FA4D                    cmp dx,77d
0000052E  7218                      jb etitool2 ;JB=Jump if Below (Brinca si esta abajo)
00000530  83FA7D                    cmp dx,125d
00000533  7713                      ja etitool2 ;JA=Jmp if Above (Brinca si esta arriba)
00000535  83F913                    cmp cx,19d
00000538  720E                      jb etitool2
0000053A  83F943                    cmp cx,67d
0000053D  7709                      ja etitool2
0000053F  2EC606000001              mov tool,1d
00000545  E964FD                    jmp eti10
00000548                        etitool2:
00000548  83FA4D                    cmp dx,77d
0000054B  7219                      jb etitool3 ;JB=Jump if Below (Brinca si esta abajo)
0000054D  83FA7D                    cmp dx,125d
00000550  7714                      ja etitool3 ;JA=Jmp if Above (Brinca si esta arriba)
00000552  83F961                    cmp cx,97d
00000555  720F                      jb etitool3
00000557  81F99100                  cmp cx,145d
0000055B  7709                      ja etitool3
0000055D  2EC606000002              mov tool,2d
00000563  E946FD                    jmp eti10
00000566                        etitool3:
00000566  81FA8F00                  cmp dx,143d
0000056A  7219                      jb etitool4 ;JB=Jump if Below (Brinca si esta abajo)
0000056C  81FAC000                  cmp dx,192d
00000570  7713                      ja etitool4 ;JA=Jmp if Above (Brinca si esta arriba)
00000572  83F913                    cmp cx,19d
00000575  720E                      jb etitool4
00000577  83F943                    cmp cx,67d
0000057A  7709                      ja etitool4
0000057C  2EC606000003              mov tool,3d
00000582  E927FD                    jmp eti10
00000585                        etitool4:
00000585  81FA8D00                  cmp dx,141d
00000589  721A                      jb etitool5 ;JB=Jump if Below (Brinca si esta abajo)
0000058B  81FABD00                  cmp dx,189d
0000058F  7714                      ja etitool5 ;JA=Jmp if Above (Brinca si esta arriba)
00000591  83F961                    cmp cx,97d
00000594  720F                      jb etitool5
00000596  81F99100                  cmp cx,145d
0000059A  7709                      ja etitool5
0000059C  2EC606000004              mov tool,4d
000005A2  E907FD                    jmp eti10
000005A5                        etitool5:
000005A5  81FAD000                  cmp dx,208d
000005A9  7303E9FEFC                jb eti10 ;JB=Jump if Below (Brinca si esta abajo)
000005AE  81FA0001                  cmp dx,256d
000005B2  7603E9F5FC                ja eti10 ;JA=Jmp if Above (Brinca si esta arriba)
000005B7  83F914                    cmp cx,20d
000005BA  7303E9EDFC                jb eti10
000005BF  83F944                    cmp cx,68d
000005C2  7603E9E5FC                ja eti10
000005C7  2EC606000005              mov tool,5d
000005CD  E9DCFC                    jmp eti10
                                    
000005D0                        draw:
                                ; TODO: Refactor mov cx; mov dx;
000005D0  2E803E000001              cmp tool,1
000005D6  7423                      je drawpen
000005D8  2E803E000002              cmp tool,2
000005DE  7453                      je draweraser
000005E0  2E803E000003              cmp tool,3
000005E6  7503E9C000                je drawsquare
000005EB  2E803E000004              cmp tool,4
000005F1  746C                      je drawspray
000005F3  2E803E000005              cmp tool,5
000005F9  7422                      je drawbrush
000005FB                        drawpen:
000005FB  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000600  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
00000605  E8EF01                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    ponpix col,ren ;Llama a la macro PONPIX para desplegar PIXEL
00000608  B40C               1   mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
0000060A  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
0000060E  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
00000613  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
00000618  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
0000061A  E912FC                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
0000061D                        drawbrush:
0000061D  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000622  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
00000627  E8CD01                    call apaga ;Llama al procedimiento APAGA para apagar el raton
0000062A  B90A00                    mov cx, 10d ; Define el tamaño del pincel
0000062D  E89400                    call brush
00000630  E9FCFB                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
00000633                        draweraser:
00000633  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000638  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
0000063D  E8B701                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    borpix col,ren ;Llama a la macro borpix para desplegar PIXEL
00000640  B40C               1      mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
00000642  B00F               1      mov al,0fh ;AL=Atributos de color, parte baja : Blanco como el panel de fondo
00000644  2E8B0E0000         1      mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
00000649  2E8B160000         1      mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
0000064E  CD10               1      int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
00000650  41                 1      inc cx
00000651  CD10               1      int 10h
00000653  41                 1      inc cx
00000654  CD10               1      int 10h
00000656  41                 1      inc cx
00000657  CD10               1      int 10h
00000659  41                 1      inc cx
0000065A  CD10               1      int 10h
0000065C  E9D0FB                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
0000065F                        drawspray:
0000065F  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000664  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
00000669  E88B01                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    spraypix col,ren ;Llama a la macro spraypix para desplegar PIXEL
0000066C  B40C               1   mov ah,0Ch ;Funcion 0Ch para pintar o desplegar PIXEL
0000066E  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
00000672  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL
00000677  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL
0000067C  51                 1   push cx
0000067D  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
0000067F  83C102             1   add cx,2d
00000682  CD10               1   int 10h
00000684  83C102             1   add cx,2d
00000687  CD10               1   int 10h
00000689  83C102             1   add cx,2d
0000068C  CD10               1   int 10h
0000068E  59                 1   pop cx
0000068F  83EA02             1   sub dx,2d
00000692  CD10               1   int 10h
00000694  83EA02             1   sub dx,2d
00000697  CD10               1   int 10h
00000699  83EA02             1   sub dx,2d
0000069C  CD10               1   int 10h
0000069E  83EA02             1   sub dx,2d
000006A1  CD10               1   int 10h
000006A3  83EA02             1   sub dx,2d
000006A6  CD10               1   int 10h
000006A8  E984FB                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
000006AB                        drawsquare:
000006AB  E86B00                    call cuadro
000006AE  E97EFB                    jmp etip
000006B1                        fin:
000006B1  E84301                 call apaga ;Apaga raton
000006B4  E84D01                 call cierragraf ;Cierra graficos
000006B7  CD20                   int 20h ;Termina el programa

                                ;------------------ Inicia Zona de Procedimientos ----------------------
000006B9                        uptpos proc
000006B9  2E890E0000                mov col,Cx
000006BE  2E89160000                mov ren, dx
000006C3                            ret
000006C4                            uptpos endp
000006C4                        brush proc ; Size is defined by cx value at start of procedure
000006C4                            brush0:
000006C4  51                        push cx
                                    ponpix col, ren
000006C5  B40C               1   mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
000006C7  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
000006CB  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
000006D0  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
000006D5  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
000006D7  2EFF060000                inc col
000006DC  59                        pop cx
000006DD  E2E5                      loop brush0
000006DF                            ret
000006E0                            brush endp
000006E0                        curcolor proc ; Size is defined by cx value at start of procedure
                                    ; mov col, 105d
000006E0  2EC7060000F200            mov ren, 242d
000006E7  B11C                      mov cl, 28d
000006E9                            curcolor0:
000006E9  B51C                          mov ch, 28d
000006EB  2EC70600006900                mov col, 105d
000006F2                                curcolorloop1:
000006F2  51                                push cx
                                            ponpix col, ren
000006F3  B40C               1   mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
000006F5  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
000006F9  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
000006FE  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
00000703  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
00000705  2EFF060000                        inc col
0000070A  59                                pop cx
0000070B  FECD                              dec ch
0000070D  75E3                              jnz curcolorloop1
0000070F  2EFF0E0000                dec ren
00000714  FEC9                      dec cl
00000716  75D1                      jnz curcolor0
00000718                            ret
00000719                            curcolor endp
00000719                        cuadro proc
00000719  2E890E0000                mov col1,cx
0000071E  2E89160000                mov ren1,dx
00000723                            cuad0:
00000723  B80300                    mov ax,3d
00000726  CD33                      int 33h
00000728  83FB02                    cmp bx,2d
0000072B  75F6                      jne cuad0 ;Este ciclo (cuad0) solo termina si se oprime el botón Derecho
0000072D  81F9B200                  cmp cx,178d
00000731  72F0                      jb cuad0 ;JB=Jump if Below (Brinca si esta abajo)
00000733  81F97102                  cmp cx,625d
00000737  77EA                      ja cuad0 ;JA=Jmp if Above (Brinca si esta arriba)
00000739  81FA9801                  cmp dx,408d
0000073D  77E4                      ja cuad0
0000073F  83FA0F                    cmp dx,15d
00000742  72DF                      jb cuad0
                                    ; Apagar mouse para poner pixeles debajo
00000744  B80200                    mov ax, 2d
00000747  CD33                      int 33h
00000749  2E890E0000                mov col2,cx
0000074E  2E89160000                mov ren2,dx
00000753  2E8B0E0000                mov cx,col1
00000758  2E8B160000                mov dx,ren1
0000075D                            cuad1: ;Inicia proceso para dibujar linea superior horizontal
0000075D  B40C                      mov ah,0ch
0000075F  2EA00000                  mov al,colo
00000763  CD10                      int 10h ; Pone el primer pixel
00000765  2E3B0E0000                cmp cx, col2
0000076A  7303                      jae cuad1izq
0000076C  41                        inc cx
0000076D  EB01                      jmp cuad1val
0000076F                            cuad1izq:
0000076F  49                        dec cx
00000770                            cuad1val:
00000770  2E3B0E0000                cmp cx,col2
00000775  75E6                      jne cuad1 ;JBE=Jump if not Equal
00000777  CD10                      int 10h
00000779  2E8B0E0000                mov cx,col1
0000077E  2E8B160000                mov dx,ren2
00000783                            cuad2: ;Inicia proceso para dibujar linea inferior horizontal
00000783  B40C                      mov ah,0ch
00000785  2EA00000                  mov al,colo
00000789  CD10                      int 10h
0000078B  2E3B0E0000                cmp cx, col2
00000790  7303                      jae cuad2izq
00000792  41                        inc cx
00000793  EB01                      jmp cuad2val
00000795                            cuad2izq:
00000795  49                        dec cx
00000796                            cuad2val:
00000796  2E3B0E0000                cmp cx,col2
0000079B  75E6                      jne cuad2
0000079D  CD10                      int 10h
0000079F  2E8B0E0000                mov cx,col1
000007A4  2E8B160000                mov dx,ren1
000007A9                            cuad3: ;Inicia proceso para dibujar linea izquierda vertical
000007A9  B40C                      mov ah,0ch
000007AB  2EA00000                  mov al,colo
000007AF  CD10                      int 10h
000007B1  2E3B160000                cmp dx, ren2
000007B6  7303                      jae cuad3up
000007B8  42                        inc dx
000007B9  EB01                      jmp cuad3val
000007BB                            cuad3up:
000007BB  4A                        dec dx
000007BC                            cuad3val:
000007BC  2E3B160000                cmp dx,ren2
000007C1  75E6                      jne cuad3
000007C3  CD10                      int 10h
000007C5  2E8B0E0000                mov cx,col2
000007CA  2E8B160000                mov dx,ren1
000007CF                            cuad4: ;Inicia proceso para dibujar linea derecha vertical
000007CF  B40C                      mov ah,0ch
000007D1  2EA00000                  mov al,colo
000007D5  CD10                      int 10h
000007D7  2E3B160000                cmp dx, ren2
000007DC  7303                      jae cuad4up
000007DE  42                        inc dx
000007DF  EB01                      jmp cuad4val
000007E1                            cuad4up:
000007E1  4A                        dec dx
000007E2                            cuad4val:
000007E2  2E3B160000                cmp dx,ren2
000007E7  75E6                      jne cuad4
000007E9  CD10                      int 10h
000007EB  B80200                    mov ax,2d
000007EE  CD33                      int 33h
000007F0                            ret
000007F1                            cuadro endp
000007F1                        prende proc
000007F1  B80100                 mov ax,1d
000007F4  CD33                   int 33h
000007F6                         ret
000007F7                        apaga proc
000007F7  B80200                 mov ax,2d
000007FA  CD33                   int 33h
000007FC                         ret
000007FD                        inigraf proc
000007FD  B400                   mov ah,0d
000007FF  B012                   mov al,18d
00000801  CD10                   int 10h
00000803                         ret
00000804                        cierragraf proc
00000804  B400                   mov ah,0d
00000806  B003                   mov al,3d
00000808  CD10                   int 10h
0000080A                         ret 



Binary Map:

Segment                  Pos(file)     RVA  Size(fil) Size(mem)
---------------------------------------------------------------
CSEG                            0      100       70B       70B
---------------------------------------------------------------
                                                 70B       70B


Macros:

                N a m e                 Type

@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func
ASDOUBLE . . . . . . . . . . . .        Func
ASFLOAT  . . . . . . . . . . . .        Func
CLASS  . . . . . . . . . . . . .        Proc
CMETHOD  . . . . . . . . . . . .        Proc
COMINTERFACE . . . . . . . . . .        Proc
CSTATIC  . . . . . . . . . . . .        Proc
CSTR . . . . . . . . . . . . . .        Func
CVIRTUAL . . . . . . . . . . . .        Proc
ENDCLASS . . . . . . . . . . . .        Proc
ENDCOMINTERFACE  . . . . . . . .        Proc
ENDMETHOD  . . . . . . . . . . .        Proc
ENDMETHODS . . . . . . . . . . .        Proc
ENDOINTERFACE  . . . . . . . . .        Proc
EXPAND_PREFIX  . . . . . . . . .        Func
FP10 . . . . . . . . . . . . . .        Func
FP4  . . . . . . . . . . . . . .        Func
FP8  . . . . . . . . . . . . . .        Func
GETMASK128 . . . . . . . . . . .        Proc
LOADMSD  . . . . . . . . . . . .        Proc
LOADMSS  . . . . . . . . . . . .        Proc
LOADPS . . . . . . . . . . . . .        Proc
LOADSD . . . . . . . . . . . . .        Proc
LOADSS . . . . . . . . . . . . .        Proc
MEMALIGN . . . . . . . . . . . .        Proc
MEMALLOC . . . . . . . . . . . .        Proc
MEMFREE  . . . . . . . . . . . .        Proc
METHOD . . . . . . . . . . . . .        Proc
MOV128 . . . . . . . . . . . . .        Proc
MOV64  . . . . . . . . . . . . .        Proc
MOVXMMR128 . . . . . . . . . . .        Proc
NOTMASK128 . . . . . . . . . . .        Proc
OINTERFACE . . . . . . . . . . .        Proc
R4P  . . . . . . . . . . . . . .        Func
R8P  . . . . . . . . . . . . . .        Func
REGS15STORAGE  . . . . . . . . .        Proc
REPARG . . . . . . . . . . . . .        Func
RV . . . . . . . . . . . . . . .        Func
SHIFTLEFT128 . . . . . . . . . .        Proc
SHIFTRIGHT128  . . . . . . . . .        Proc
SLXMMR . . . . . . . . . . . . .        Proc
SRXMMR . . . . . . . . . . . . .        Proc
STATICMETHOD . . . . . . . . . .        Proc
STATICVECMETHOD  . . . . . . . .        Proc
UINVOKE  . . . . . . . . . . . .        Func
VECMETHOD  . . . . . . . . . . .        Proc
WSTR . . . . . . . . . . . . . .        Func
_ARRAY . . . . . . . . . . . . .        Func
_DECLARE . . . . . . . . . . . .        Proc
_DELETE  . . . . . . . . . . . .        Proc
_DELETEARRAY . . . . . . . . . .        Proc
_DEREF . . . . . . . . . . . . .        Proc
_DEREFI  . . . . . . . . . . . .        Func
_I . . . . . . . . . . . . . . .        Func
_INVOKE  . . . . . . . . . . . .        Proc
_ITEM  . . . . . . . . . . . . .        Func
_ITEMR . . . . . . . . . . . . .        Func
_NEW . . . . . . . . . . . . . .        Func
_RBXNEW  . . . . . . . . . . . .        Func
_SINVOKE . . . . . . . . . . . .        Proc
_STATIC  . . . . . . . . . . . .        Func
_STATICREF . . . . . . . . . . .        Proc
_V . . . . . . . . . . . . . . .        Func
_VINVOKE . . . . . . . . . . . .        Proc
arginvoke  . . . . . . . . . . .        Func
borpix . . . . . . . . . . . . .        Proc
numero . . . . . . . . . . . . .        Proc
ponpix . . . . . . . . . . . . .        Proc
spraypix . . . . . . . . . . . .        Proc


Structures and Unions:

                N a m e                 Size/Ofs   Type

__m128 . . . . . . . . . . . . .              10
  f32  . . . . . . . . . . . . .               0   __m128f
  i8 . . . . . . . . . . . . . .               0   __m128b
  i16  . . . . . . . . . . . . .               0   __m128w
  i32  . . . . . . . . . . . . .               0   __m128i
  d64  . . . . . . . . . . . . .               0   __m128d
  q64  . . . . . . . . . . . . .               0   __m128q
__m128b  . . . . . . . . . . . .              10
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
__m128d  . . . . . . . . . . . .              10
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
__m128f  . . . . . . . . . . . .              10
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
__m128i  . . . . . . . . . . . .              10
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
__m128q  . . . . . . . . . . . .              10
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
__m128w  . . . . . . . . . . . .              10
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
__m256 . . . . . . . . . . . . .              20
  f32  . . . . . . . . . . . . .               0   __m256f
  i8 . . . . . . . . . . . . . .               0   __m256b
  i16  . . . . . . . . . . . . .               0   __m256w
  i32  . . . . . . . . . . . . .               0   __m256i
  d64  . . . . . . . . . . . . .               0   __m256d
  q64  . . . . . . . . . . . . .               0   __m256q
__m256b  . . . . . . . . . . . .              20
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
  b16  . . . . . . . . . . . . .              10   Byte
  b17  . . . . . . . . . . . . .              11   Byte
  b18  . . . . . . . . . . . . .              12   Byte
  b19  . . . . . . . . . . . . .              13   Byte
  b20  . . . . . . . . . . . . .              14   Byte
  b21  . . . . . . . . . . . . .              15   Byte
  b22  . . . . . . . . . . . . .              16   Byte
  b23  . . . . . . . . . . . . .              17   Byte
  b24  . . . . . . . . . . . . .              18   Byte
  b25  . . . . . . . . . . . . .              19   Byte
  b26  . . . . . . . . . . . . .              1A   Byte
  b27  . . . . . . . . . . . . .              1B   Byte
  b28  . . . . . . . . . . . . .              1C   Byte
  b29  . . . . . . . . . . . . .              1D   Byte
  b30  . . . . . . . . . . . . .              1E   Byte
  b31  . . . . . . . . . . . . .              1F   Byte
__m256d  . . . . . . . . . . . .              20
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
  d2 . . . . . . . . . . . . . .              10   
  d3 . . . . . . . . . . . . . .              18   
__m256f  . . . . . . . . . . . .              20
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
  f4 . . . . . . . . . . . . . .              10   
  f5 . . . . . . . . . . . . . .              14   
  f6 . . . . . . . . . . . . . .              18   
  f7 . . . . . . . . . . . . . .              1C   
__m256i  . . . . . . . . . . . .              20
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
  i4 . . . . . . . . . . . . . .              10   DWord
  i5 . . . . . . . . . . . . . .              14   DWord
  i6 . . . . . . . . . . . . . .              18   DWord
  i7 . . . . . . . . . . . . . .              1C   DWord
__m256q  . . . . . . . . . . . .              20
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
  q2 . . . . . . . . . . . . . .              10   QWord
  q3 . . . . . . . . . . . . . .              18   QWord
__m256w  . . . . . . . . . . . .              20
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
  w8 . . . . . . . . . . . . . .              10   Word
  w9 . . . . . . . . . . . . . .              12   Word
  w10  . . . . . . . . . . . . .              14   Word
  w11  . . . . . . . . . . . . .              16   Word
  w12  . . . . . . . . . . . . .              18   Word
  w13  . . . . . . . . . . . . .              1A   Word
  w14  . . . . . . . . . . . . .              1C   Word
  w15  . . . . . . . . . . . . .              1E   Word
__m512 . . . . . . . . . . . . .              40
  f32  . . . . . . . . . . . . .               0   __m512f
  i8 . . . . . . . . . . . . . .               0   __m512b
  i16  . . . . . . . . . . . . .               0   __m512w
  i32  . . . . . . . . . . . . .               0   __m512i
  d64  . . . . . . . . . . . . .               0   __m512d
  q64  . . . . . . . . . . . . .               0   __m512q
__m512b  . . . . . . . . . . . .              40
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
  b16  . . . . . . . . . . . . .              10   Byte
  b17  . . . . . . . . . . . . .              11   Byte
  b18  . . . . . . . . . . . . .              12   Byte
  b19  . . . . . . . . . . . . .              13   Byte
  b20  . . . . . . . . . . . . .              14   Byte
  b21  . . . . . . . . . . . . .              15   Byte
  b22  . . . . . . . . . . . . .              16   Byte
  b23  . . . . . . . . . . . . .              17   Byte
  b24  . . . . . . . . . . . . .              18   Byte
  b25  . . . . . . . . . . . . .              19   Byte
  b26  . . . . . . . . . . . . .              1A   Byte
  b27  . . . . . . . . . . . . .              1B   Byte
  b28  . . . . . . . . . . . . .              1C   Byte
  b29  . . . . . . . . . . . . .              1D   Byte
  b30  . . . . . . . . . . . . .              1E   Byte
  b31  . . . . . . . . . . . . .              1F   Byte
  b32  . . . . . . . . . . . . .              20   Byte
  b33  . . . . . . . . . . . . .              21   Byte
  b34  . . . . . . . . . . . . .              22   Byte
  b35  . . . . . . . . . . . . .              23   Byte
  b36  . . . . . . . . . . . . .              24   Byte
  b37  . . . . . . . . . . . . .              25   Byte
  b38  . . . . . . . . . . . . .              26   Byte
  b39  . . . . . . . . . . . . .              27   Byte
  b40  . . . . . . . . . . . . .              28   Byte
  b41  . . . . . . . . . . . . .              29   Byte
  b42  . . . . . . . . . . . . .              2A   Byte
  b43  . . . . . . . . . . . . .              2B   Byte
  b44  . . . . . . . . . . . . .              2C   Byte
  b45  . . . . . . . . . . . . .              2D   Byte
  b46  . . . . . . . . . . . . .              2E   Byte
  b47  . . . . . . . . . . . . .              2F   Byte
  b48  . . . . . . . . . . . . .              30   Byte
  b49  . . . . . . . . . . . . .              31   Byte
  b50  . . . . . . . . . . . . .              32   Byte
  b51  . . . . . . . . . . . . .              33   Byte
  b52  . . . . . . . . . . . . .              34   Byte
  b53  . . . . . . . . . . . . .              35   Byte
  b54  . . . . . . . . . . . . .              36   Byte
  b55  . . . . . . . . . . . . .              37   Byte
  b56  . . . . . . . . . . . . .              38   Byte
  b57  . . . . . . . . . . . . .              39   Byte
  b58  . . . . . . . . . . . . .              3A   Byte
  b59  . . . . . . . . . . . . .              3B   Byte
  b60  . . . . . . . . . . . . .              3C   Byte
  b61  . . . . . . . . . . . . .              3D   Byte
  b62  . . . . . . . . . . . . .              3E   Byte
  b63  . . . . . . . . . . . . .              3F   Byte
__m512d  . . . . . . . . . . . .              40
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
  d2 . . . . . . . . . . . . . .              10   
  d3 . . . . . . . . . . . . . .              18   
  d4 . . . . . . . . . . . . . .              20   
  d5 . . . . . . . . . . . . . .              28   
  d6 . . . . . . . . . . . . . .              30   
  d7 . . . . . . . . . . . . . .              38   
__m512f  . . . . . . . . . . . .              40
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
  f4 . . . . . . . . . . . . . .              10   
  f5 . . . . . . . . . . . . . .              14   
  f6 . . . . . . . . . . . . . .              18   
  f7 . . . . . . . . . . . . . .              1C   
  f8 . . . . . . . . . . . . . .              20   
  f9 . . . . . . . . . . . . . .              24   
  f10  . . . . . . . . . . . . .              28   
  f11  . . . . . . . . . . . . .              2C   
  f12  . . . . . . . . . . . . .              30   
  f13  . . . . . . . . . . . . .              34   
  f14  . . . . . . . . . . . . .              38   
  f15  . . . . . . . . . . . . .              3C   
__m512i  . . . . . . . . . . . .              40
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
  i4 . . . . . . . . . . . . . .              10   DWord
  i5 . . . . . . . . . . . . . .              14   DWord
  i6 . . . . . . . . . . . . . .              18   DWord
  i7 . . . . . . . . . . . . . .              1C   DWord
  i8 . . . . . . . . . . . . . .              20   DWord
  i9 . . . . . . . . . . . . . .              24   DWord
  i10  . . . . . . . . . . . . .              28   DWord
  i11  . . . . . . . . . . . . .              2C   DWord
  i12  . . . . . . . . . . . . .              30   DWord
  i13  . . . . . . . . . . . . .              34   DWord
  i14  . . . . . . . . . . . . .              38   DWord
  i15  . . . . . . . . . . . . .              3C   DWord
__m512q  . . . . . . . . . . . .              40
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
  q2 . . . . . . . . . . . . . .              10   QWord
  q3 . . . . . . . . . . . . . .              18   QWord
  q4 . . . . . . . . . . . . . .              20   QWord
  q5 . . . . . . . . . . . . . .              28   QWord
  q6 . . . . . . . . . . . . . .              30   QWord
  q7 . . . . . . . . . . . . . .              38   QWord
__m512w  . . . . . . . . . . . .              40
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
  w8 . . . . . . . . . . . . . .              10   Word
  w9 . . . . . . . . . . . . . .              12   Word
  w10  . . . . . . . . . . . . .              14   Word
  w11  . . . . . . . . . . . . .              16   Word
  w12  . . . . . . . . . . . . .              18   Word
  w13  . . . . . . . . . . . . .              1A   Word
  w14  . . . . . . . . . . . . .              1C   Word
  w15  . . . . . . . . . . . . .              1E   Word
  w16  . . . . . . . . . . . . .              20   Word
  w17  . . . . . . . . . . . . .              22   Word
  w18  . . . . . . . . . . . . .              24   Word
  w19  . . . . . . . . . . . . .              26   Word
  w20  . . . . . . . . . . . . .              28   Word
  w21  . . . . . . . . . . . . .              2A   Word
  w22  . . . . . . . . . . . . .              2C   Word
  w23  . . . . . . . . . . . . .              2E   Word
  w24  . . . . . . . . . . . . .              30   Word
  w25  . . . . . . . . . . . . .              32   Word
  w26  . . . . . . . . . . . . .              34   Word
  w27  . . . . . . . . . . . . .              36   Word
  w28  . . . . . . . . . . . . .              38   Word
  w29  . . . . . . . . . . . . .              3A   Word
  w30  . . . . . . . . . . . . .              3C   Word
  w31  . . . . . . . . . . . . .              3E   Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CSEG . . . . . . . . . . . . . .        16 Bit   080B     Para    Private ''


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

apaga  . . . . . . . . . . . . .        P Near   07F7     CSEG     0000 Public   
brush  . . . . . . . . . . . . .        P Near   06C4     CSEG     001C Public   
  brush0 . . . . . . . . . . . .        L Near   06C4     CSEG
cierragraf . . . . . . . . . . .        P Near   0804     CSEG     0000 Public   
cuadro . . . . . . . . . . . . .        P Near   0719     CSEG     00D8 Public   
  cuad2  . . . . . . . . . . . .        L Near   0783     CSEG
  cuad2izq . . . . . . . . . . .        L Near   0795     CSEG
  cuad2val . . . . . . . . . . .        L Near   0796     CSEG
  cuad4val . . . . . . . . . . .        L Near   07E2     CSEG
  cuad1val . . . . . . . . . . .        L Near   0770     CSEG
  cuad3  . . . . . . . . . . . .        L Near   07A9     CSEG
  cuad4up  . . . . . . . . . . .        L Near   07E1     CSEG
  cuad1izq . . . . . . . . . . .        L Near   076F     CSEG
  cuad0  . . . . . . . . . . . .        L Near   0723     CSEG
  cuad3val . . . . . . . . . . .        L Near   07BC     CSEG
  cuad4  . . . . . . . . . . . .        L Near   07CF     CSEG
  cuad3up  . . . . . . . . . . .        L Near   07BB     CSEG
  cuad1  . . . . . . . . . . . .        L Near   075D     CSEG
curcolor . . . . . . . . . . . .        P Near   06E0     CSEG     0039 Public   
  curcolorloop1  . . . . . . . .        L Near   06F2     CSEG
  curcolor0  . . . . . . . . . .        L Near   06E9     CSEG
inigraf  . . . . . . . . . . . .        P Near   07FD     CSEG     0000 Public   
prende . . . . . . . . . . . . .        P Near   07F1     CSEG     0000 Public   
uptpos . . . . . . . . . . . . .        P Near   06B9     CSEG     000B Public   


Symbols:

                N a m e                 Type       Value     Attr

BuildDOS . . . . . . . . . . . .        Text   1
DosVGA . . . . . . . . . . . . .        Text   1
buffer . . . . . . . . . . . . .        Byte             157h CSEG 
cad  . . . . . . . . . . . . . .        Byte[66]         102h CSEG 
col  . . . . . . . . . . . . . .        Word             153h CSEG 
col1 . . . . . . . . . . . . . .        Word             15Ah CSEG 
col2 . . . . . . . . . . . . . .        Word             15Eh CSEG 
colo . . . . . . . . . . . . . .        Byte             158h CSEG 
draw . . . . . . . . . . . . . .        L Near           5D0h CSEG 
drawbrush  . . . . . . . . . . .        L Near           61Dh CSEG 
draweraser . . . . . . . . . . .        L Near           633h CSEG 
drawpen  . . . . . . . . . . . .        L Near           5FBh CSEG 
drawspray  . . . . . . . . . . .        L Near           65Fh CSEG 
drawsquare . . . . . . . . . . .        L Near           6ABh CSEG 
err  . . . . . . . . . . . . . .        L Near           221h CSEG 
eti0 . . . . . . . . . . . . . .        L Near           162h CSEG 
eti1 . . . . . . . . . . . . . .        L Near           177h CSEG 
eti10  . . . . . . . . . . . . .        L Near           2ACh CSEG 
eti2 . . . . . . . . . . . . . .        L Near           190h CSEG 
eticolor0  . . . . . . . . . . .        L Near           2D8h CSEG 
eticolor1  . . . . . . . . . . .        L Near           2FAh CSEG 
eticolor10 . . . . . . . . . . .        L Near           438h CSEG 
eticolor11 . . . . . . . . . . .        L Near           45Ch CSEG 
eticolor12 . . . . . . . . . . .        L Near           480h CSEG 
eticolor13 . . . . . . . . . . .        L Near           4A4h CSEG 
eticolor14 . . . . . . . . . . .        L Near           4C8h CSEG 
eticolor15 . . . . . . . . . . .        L Near           4ECh CSEG 
eticolor2  . . . . . . . . . . .        L Near           31Ch CSEG 
eticolor3  . . . . . . . . . . .        L Near           33Eh CSEG 
eticolor4  . . . . . . . . . . .        L Near           360h CSEG 
eticolor5  . . . . . . . . . . .        L Near           384h CSEG 
eticolor6  . . . . . . . . . . .        L Near           3A8h CSEG 
eticolor7  . . . . . . . . . . .        L Near           3CCh CSEG 
eticolor8  . . . . . . . . . . .        L Near           3F0h CSEG 
eticolor9  . . . . . . . . . . .        L Near           414h CSEG 
etiexitbut . . . . . . . . . . .        L Near           510h CSEG 
etip . . . . . . . . . . . . . .        L Near           22Fh CSEG 
etitool1 . . . . . . . . . . . .        L Near           52Bh CSEG 
etitool2 . . . . . . . . . . . .        L Near           548h CSEG 
etitool3 . . . . . . . . . . . .        L Near           566h CSEG 
etitool4 . . . . . . . . . . . .        L Near           585h CSEG 
etitool5 . . . . . . . . . . . .        L Near           5A5h CSEG 
filename . . . . . . . . . . . .        Byte[13]         144h CSEG 
fin  . . . . . . . . . . . . . .        L Near           6B1h CSEG 
handle . . . . . . . . . . . . .        Word             151h CSEG 
ren  . . . . . . . . . . . . . .        Word             155h CSEG 
ren1 . . . . . . . . . . . . . .        Word             15Ch CSEG 
ren2 . . . . . . . . . . . . . .        Word             160h CSEG 
start  . . . . . . . . . . . . .        L Near           22Fh CSEG 
tool . . . . . . . . . . . . . .        Byte             159h CSEG 

prog12.asm: 660 lines, 2 passes, 16 ms, 0 warnings, 0 errors
