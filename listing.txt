UASM v2.49, Jun 21 2019, Masm-compatible assembler.

prog12.asm
00000000                        CSEG    SEGMENT     ; code segment starts here.
                                    org 100h
00000100  EB60                      jmp eti0
                                ;Zona de declaracion de Cadenas e Identificadores creados por el usuario (variables)
                                .data
00000102  4572726F722C206172    cad db 'Error, archivo no encontrado!...presione una tecla para terminar.$'
00000144  433A5C696D6167656E    filename db "C:\imagen.bmp" ;Unidad Logica, Ruta, Nombre y Extension del archivo de imagen a utilizar
00000151  0000                  handle dw ? ;DW=Define Word, para almacenar valores entre 0 y 65535, o sea 16 bits
00000153  0000                  col dw 0 ;COL=0
00000155  DF01                  ren dw 479 ;REN=479d
                                ; afueras db 0
00000157  00                    buffer db ? ;DB=Define Byte, para almacenar valores entre 0 y 255, o sea 8 bits
00000158  00                    colo db ? ; ? = Valor NO definido de inicio
                                ; Cual herramienta se esta usando
00000159  01                    tool db 1
                                ; Datos para cuadro
0000015A  0000                  col1 dw ?
0000015C  0000                  ren1 dw ?
0000015E  0000                  col2 dw ?
00000160  0000                  ren2 dw ?
                                ; Macro para mostrar posicion de mouse
                                numero macro num
 >                               mov ax,num
 >                               mov bl,100d
 >                               div bl
 >                               mov dl,al
 >                               add dl,30h
 >                               push ax
 >                               mov ah,02h
 >                               int 21h
 >                               pop ax
 >                               shr ax,8
 >                               mov bl,10d
 >                               div bl
 >                               mov dl,al
 >                               add dl,30h
 >                               push ax
 >                               mov ah,02h
 >                               int 21h
 >                               pop ax
 >                               shr ax,8 
 >                               mov dl,al
 >                               add dl,30h
 >                               mov ah,02h
 >                               int 21h
 >                               endm
                                ;**************************************************************************************************************************
                                .code
00000162                        eti0:
00000162  B43D                      mov ah,3dh ;Funcion 3DH, abre un archivo existente
00000164  B000                      mov al,0 ;AL=Modos de Acceso, 0=Solo Lectura, 1=Escritura, 2=Lectura/Escritura
00000166  BA0000                    mov dx,offset filename ;DX=Direccion de la cadena de RUTA
00000169  CD21                      int 21h ;INT 21H función 3DH, abre un archivo. Esta funcion altera la bandera CF (Carry
                                    ;Flag), si el archivo se pudo abrir sin error CF=0, y en AX esta el Manejador de Archivo
                                    ;(Handle), caso contrario CF=1, y en AX esta el codigo de error
0000016B  7303E9AE00                jc err ;Si hay error, salta a la etiqueta ERR
00000170  2EA30000                  mov handle,ax ;Caso contrario HANDLE=Manejador de Archivo
                                ;*************************************************************************************************************************
00000174  B97600                    mov cx,118d ;Se prepara ciclo de 118 vueltas (Para leer archivo en formato BMP)
00000177                        eti1:
00000177  51                     push cx
00000178  B43F                   mov ah,3fh ;3FH=Leer del archivo
0000017A  2E8B1E0000             mov bx,handle
0000017F  BA0000                 mov dx,offset buffer
00000182  B90100                 mov cx,1 ;CX=Numero de Bytes a leer
00000185  CD21                   int 21h ;INT 21H funcion 3FH, leer del archivo
00000187  59                     pop cx
00000188  E2ED                   loop eti1
                                ;*************************************************************************************************************************
0000018A  B400                   mov ah,00h ;Funcion 00H para la INT 10H (Resolucion de Pantalla)
0000018C  B012                   mov al,12h ;AL=Modo de despliegue o resolución, 12h = 640x480 a 16 colores
0000018E  CD10                   int 10h ;INT 10H funcion 00H, inicializar resolucion
                                 ;***********************************************************************************************************************
00000190                        eti2:
00000190  B43F                   mov ah,3fh ;3FH=Leer del archivo
00000192  2E8B1E0000             mov bx,handle
00000197  BA0000                 mov dx,offset buffer
0000019A  B90100                 mov cx,1
0000019D  CD21                   int 21h ;INT 21H funcion 3FH, leer del archivo. En BUFFER se almacenaran los datos leidos

0000019F  2EA00000               mov al,buffer ;AL=BUFFER, en los 4 bits superiores esta el color de un PRIMER Pixel
000001A3  24F0                   and al,11110000b
000001A5  C0C804                 ror al,4
000001A8  2EA20000               mov colo,al ;COLO=Color de un PRIMER Pixel
000001AC  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001AE  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001B2  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001B7  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001BC  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX

000001BE  2EA00000               mov al,buffer ;AL=BUFFER, en los 4 bits inferiores esta el color de un SEGUNDO Pixel
000001C2  240F                   and al,00001111b
000001C4  2EA20000               mov colo,al ;COLO=Color de un SEGUNDO Pixel
000001C8  2EFF060000             inc col
000001CD  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001CF  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001D3  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001D8  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001DD  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX
000001DF  2EFF060000             inc col ;Se debe desplegar otro Pixel para dar FORMATO a la imagen
000001E4  B40C                   mov ah,0ch ;Funcion 0CH para despliegue de un solo PIXEL con atributos
000001E6  2EA00000               mov al,colo ;AL=Atributos del Pixel
000001EA  2E8B0E0000             mov cx,col ;CX=Columna de despliegue del Pixel
000001EF  2E8B160000             mov dx,ren ;DX=Renglon de desplieguie del Pixel
000001F4  CD10                   int 10h ;INT 10H funcion 0CH, pinta Pixel en coordenadas CX, DX

000001F6  2E813E00007F02         cmp col,639d
000001FD  7691                   jbe eti2 ;JBE=Jump if Below or Equal (salta si esta abajo o si es igual)

000001FF  2EC70600000000         mov col,0
00000206  2EFF0E0000             dec ren
0000020B  2E833E0000FF           cmp ren,-1 ;Se compara con -1 para llegar hasta el ultimo renglon, que es el CERO
00000211  7403E97AFF             jne eti2 ;JNE=Jump if Not Equal (salta si no es igual)
00000216  2EC606000003           mov colo,03h
                                 
0000021C  EB0E                   jmp start ; jumps to drawing section
                                ;***********************************************************************************************************************
0000021E                        err: ;Se llega hasta aqui solo si hay error en la lectura del archivo
0000021E  B409                   mov ah,09h
00000220  8D160000               lea dx,cad
00000224  CD21                   int 21h ;Despliega cad
00000226  B407                   mov ah,07h
00000228  CD21                   int 21h ;Espera a que se oprima tecla
0000022A  CD20                   int 20h ;Fin del Programa (Cuando NO se carga la imagen)
                                ;  Macros
                                spraypix macro ren,col
 >                               mov ah,0Ch ;Funcion 0Ch para pintar o desplegar PIXEL
 >                               mov al,colo ;AL=Atributos de color, parte baja
 >                               mov cx,ren ;Cx=Columna donde se despliega PIXEL
 >                               mov dx,col ;Dx=Renglon donde se despliega PIXEL
 >                               push cx
 >                               int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
 >                               add cx,2d
 >                               int 10h
 >                               add cx,2d
 >                               int 10h
 >                               add cx,2d
 >                               int 10h
 >                               pop cx
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               sub dx,2d
 >                               int 10h
 >                               endm
                                ponpix macro co,re ;Macro que recibe dos parámetros, en C y en R
 >                               mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL ;Macro que recibe dos parámetros, en C y en R
 >                               mov al,colo ;AL=Atributos de color, parte baja ;Macro que recibe dos parámetros, en C y en R
 >                               mov cx,co ;Cx=Columna donde se despliega PIXEL (empieza desde cero) ;Macro que recibe dos parámetros, en C y en R
 >                               mov dx,re ;Dx=Renglon donde se despliega PIXEL (empieza desde cero) ;Macro que recibe dos parámetros, en C y en R
 >                               int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon) ;Macro que recibe dos parámetros, en C y en R
 >                              ;  inc cx ;Macro que recibe dos parámetros, en C y en R
 >                              ;  int 10h ;Macro que recibe dos parámetros, en C y en R
 >                              ;  inc cx ;Macro que recibe dos parámetros, en C y en R
 >                              ;  int 10h ;Macro que recibe dos parámetros, en C y en R
 >                              ;  inc cx ;Macro que recibe dos parámetros, en C y en R
 >                              ;  int 10h ;Macro que recibe dos parámetros, en C y en R
 >                              ;  inc cx ;Macro que recibe dos parámetros, en C y en R
 >                              ;  int 10h ;Macro que recibe dos parámetros, en C y en R
 >                               endm ;Macro que recibe dos parámetros, en C y en R
                                borpix macro ren, col
 >                                  mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
 >                                  mov al,0fh ;AL=Atributos de color, parte baja : Blanco como el panel de fondo
 >                                  mov cx,ren ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
 >                                  mov dx,col ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
 >                                  int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  inc cx
 >                                  int 10h
 >                                  endm
                                ; actualcolor macro
                                ;     ponpix 21d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 22d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 23d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 24d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 25d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 25d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 26d,145d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     ponpix 27d,146d;Llama a la macro PONPIX para desplegar PIXEL
                                ;     endm
                                    
                                ;Inicio del Programa Principal
0000022C                        start:
0000022C                        etip:
0000022C  E84B05                    call prende ;Llama al procedimiento para prender el raton
                                    ; Muestra posicion en X y Y
                                    ; Define en que posicion se mostrara
0000022F  2E890E0000                mov col, cx
00000234  2E89160000                mov ren, dx
00000239  B402                      mov ah,02h
0000023B  B200                      mov dl, 0d
0000023D  B600                      mov dh, 0d
0000023F  CD10                      int 10h
                                    ; Los escribe en pantalla con un espacio de separacion
                                    numero col
00000241  2EA10000           1   mov ax,col
00000245  B364               1   mov bl,100d
00000247  F6F3               1   div bl
00000249  8AD0               1   mov dl,al
0000024B  80C230             1   add dl,30h
0000024E  50                 1   push ax
0000024F  B402               1   mov ah,02h
00000251  CD21               1   int 21h
00000253  58                 1   pop ax
00000254  C1E808             1   shr ax,8
00000257  B30A               1   mov bl,10d
00000259  F6F3               1   div bl
0000025B  8AD0               1   mov dl,al
0000025D  80C230             1   add dl,30h
00000260  50                 1   push ax
00000261  B402               1   mov ah,02h
00000263  CD21               1   int 21h
00000265  58                 1   pop ax
00000266  C1E808             1   shr ax,8 
00000269  8AD0               1   mov dl,al
0000026B  80C230             1   add dl,30h
0000026E  B402               1   mov ah,02h
00000270  CD21               1   int 21h
00000272  B402                      mov ah,02h
00000274  B220                      mov dl,' ' ;Mover a DL un espacio en blanco
00000276  CD21                      int 21h
                                    numero ren
00000278  2EA10000           1   mov ax,ren
0000027C  B364               1   mov bl,100d
0000027E  F6F3               1   div bl
00000280  8AD0               1   mov dl,al
00000282  80C230             1   add dl,30h
00000285  50                 1   push ax
00000286  B402               1   mov ah,02h
00000288  CD21               1   int 21h
0000028A  58                 1   pop ax
0000028B  C1E808             1   shr ax,8
0000028E  B30A               1   mov bl,10d
00000290  F6F3               1   div bl
00000292  8AD0               1   mov dl,al
00000294  80C230             1   add dl,30h
00000297  50                 1   push ax
00000298  B402               1   mov ah,02h
0000029A  CD21               1   int 21h
0000029C  58                 1   pop ax
0000029D  C1E808             1   shr ax,8 
000002A0  8AD0               1   mov dl,al
000002A2  80C230             1   add dl,30h
000002A5  B402               1   mov ah,02h
000002A7  CD21               1   int 21h
000002A9                        eti10:
000002A9  B80300                    mov ax,3d
000002AC  CD33                      int 33h ;Detecta coordenadas y boton oprimido
000002AE  83FB00                    cmp bx,0d
000002B1  7503E976FF                je etip ;Mientras NO se oprima ningun boton, se cicla
000002B6  83FB01                    cmp bx,1d
000002B9  75EE                      jne eti10 ;El programa regresa a eti10 si no es boton izq
                                    
                                    ; Solo puede pintar en el cuadro blanco
000002BB  81F9B200                  cmp cx,178d
000002BF  7214                      jb eticolor0 ;JB=Jump if Below (Brinca si esta abajo)
000002C1  81F97102                  cmp cx,625d
000002C5  770E                      ja eticolor0 ;JA=Jmp if Above (Brinca si esta arriba)
000002C7  81FA9801                  cmp dx,408d
000002CB  7708                      ja eticolor0
000002CD  83FA0F                    cmp dx,15d
000002D0  7203                      jb eticolor0
000002D2  E9C802                    jmp draw
000002D5                        eticolor0:
000002D5  81FAB901                  cmp dx,441d
000002D9  7219                      jb eticolor1 ;JB=Jump if Below (Brinca si esta abajo)
000002DB  81FAD501                  cmp dx,469d
000002DF  7713                      ja eticolor1 ;JA=Jmp if Above (Brinca si esta arriba)
000002E1  83F924                    cmp cx,36d
000002E4  770E                      ja eticolor1
000002E6  83F908                    cmp cx,8d
000002E9  7209                      jb eticolor1
000002EB  2EC606000000              mov colo, 00h
                                    ; actualcolor
000002F1  E938FF                    jmp etip

000002F4                        eticolor1:
000002F4  81FAB901                  cmp dx,441d
000002F8  7219                      jb eticolor2 ;JB=Jump if Below (Brinca si esta abajo)
000002FA  81FAD501                  cmp dx,469d
000002FE  7713                      ja eticolor2 ;JA=Jmp if Above (Brinca si esta arriba)
00000300  83F942                    cmp cx,66d
00000303  770E                      ja eticolor2
00000305  83F926                    cmp cx,38d
00000308  7209                      jb eticolor2
0000030A  2EC606000004              mov colo, 04h
                                    ; actualcolor
00000310  E919FF                    jmp etip
00000313                        eticolor2:
00000313  81FAB901                  cmp dx,441d
00000317  7219                      jb eticolor3 ;JB=Jump if Below (Brinca si esta abajo)
00000319  81FAD501                  cmp dx,469d
0000031D  7713                      ja eticolor3 ;JA=Jmp if Above (Brinca si esta arriba)
0000031F  83F960                    cmp cx,96d
00000322  770E                      ja eticolor3
00000324  83F944                    cmp cx,68d
00000327  7209                      jb eticolor3
00000329  2EC606000002              mov colo, 02h
                                    ; actualcolor
0000032F  E9FAFE                    jmp etip
00000332                        eticolor3:
00000332  81FAB901                  cmp dx,441d
00000336  7219                      jb eticolor4 ;JB=Jump if Below (Brinca si esta abajo)
00000338  81FAD501                  cmp dx,469d
0000033C  7713                      ja eticolor4 ;JA=Jmp if Above (Brinca si esta arriba)
0000033E  83F97E                    cmp cx,126d
00000341  770E                      ja eticolor4
00000343  83F962                    cmp cx,98d
00000346  7209                      jb eticolor4
00000348  2EC606000006              mov colo, 06h
                                    ; actualcolor
0000034E  E9DBFE                    jmp etip
00000351                        eticolor4:
00000351  81FAB901                  cmp dx,441d
00000355  721B                      jb eticolor5 ;JB=Jump if Below (Brinca si esta abajo)
00000357  81FAD501                  cmp dx,469d
0000035B  7715                      ja eticolor5 ;JA=Jmp if Above (Brinca si esta arriba)
0000035D  81F99C00                  cmp cx,156d
00000361  770F                      ja eticolor5
00000363  81F98000                  cmp cx,128d
00000367  7209                      jb eticolor5
00000369  2EC606000001              mov colo, 01h
                                    ; actualcolor
0000036F  E9BAFE                    jmp etip
00000372                        eticolor5:
00000372  81FAB901                  cmp dx,441d
00000376  721B                      jb eticolor6 ;JB=Jump if Below (Brinca si esta abajo)
00000378  81FAD501                  cmp dx,469d
0000037C  7715                      ja eticolor6 ;JA=Jmp if Above (Brinca si esta arriba)
0000037E  81F9BA00                  cmp cx,186d
00000382  770F                      ja eticolor6
00000384  81F99E00                  cmp cx,158d
00000388  7209                      jb eticolor6
0000038A  2EC606000005              mov colo, 05h
00000390  E999FE                    jmp etip
00000393                        eticolor6:
00000393  81FAB901                  cmp dx,441d
00000397  721B                      jb eticolor7 ;JB=Jump if Below (Brinca si esta abajo)
00000399  81FAD501                  cmp dx,469d
0000039D  7715                      ja eticolor7 ;JA=Jmp if Above (Brinca si esta arriba)
0000039F  81F9D800                  cmp cx,216d
000003A3  770F                      ja eticolor7
000003A5  81F9BC00                  cmp cx,188d
000003A9  7209                      jb eticolor7
000003AB  2EC606000003              mov colo, 03h
000003B1  E978FE                    jmp etip
000003B4                        eticolor7:
000003B4  81FAB901                  cmp dx,441d
000003B8  721B                      jb eticolor8 ;JB=Jump if Below (Brinca si esta abajo)
000003BA  81FAD501                  cmp dx,469d
000003BE  7715                      ja eticolor8 ;JA=Jmp if Above (Brinca si esta arriba)
000003C0  81F9F600                  cmp cx,246d
000003C4  770F                      ja eticolor8
000003C6  81F9DA00                  cmp cx,218d
000003CA  7209                      jb eticolor8
000003CC  2EC606000008              mov colo, 08h
000003D2  E957FE                    jmp etip
000003D5                        eticolor8:
000003D5  81FAB901                  cmp dx,441d
000003D9  721B                      jb eticolor9 ;JB=Jump if Below (Brinca si esta abajo)
000003DB  81FAD501                  cmp dx,469d
000003DF  7715                      ja eticolor9 ;JA=Jmp if Above (Brinca si esta arriba)
000003E1  81F91401                  cmp cx,276d
000003E5  770F                      ja eticolor9
000003E7  81F9F800                  cmp cx,248d
000003EB  7209                      jb eticolor9
000003ED  2EC606000007              mov colo, 07h
000003F3  E936FE                    jmp etip
000003F6                        eticolor9:
000003F6  81FAB901                  cmp dx,441d
000003FA  721B                      jb eticolor10 ;JB=Jump if Below (Brinca si esta abajo)
000003FC  81FAD501                  cmp dx,469d
00000400  7715                      ja eticolor10 ;JA=Jmp if Above (Brinca si esta arriba)
00000402  81F93201                  cmp cx,306d
00000406  770F                      ja eticolor10
00000408  81F91601                  cmp cx,278d
0000040C  7209                      jb eticolor10
0000040E  2EC60600000C              mov colo, 0Ch
00000414  E915FE                    jmp etip
00000417                        eticolor10:
00000417  81FAB901                  cmp dx,441d
0000041B  721B                      jb eticolor11 ;JB=Jump if Below (Brinca si esta abajo)
0000041D  81FAD501                  cmp dx,469d
00000421  7715                      ja eticolor11 ;JA=Jmp if Above (Brinca si esta arriba)
00000423  81F95001                  cmp cx,336d
00000427  770F                      ja eticolor11
00000429  81F93401                  cmp cx,308d
0000042D  7209                      jb eticolor11
0000042F  2EC60600000A              mov colo, 0ah
00000435  E9F4FD                    jmp etip
00000438                        eticolor11:
00000438  81FAB901                  cmp dx,441d
0000043C  721B                      jb eticolor12 ;JB=Jump if Below (Brinca si esta abajo)
0000043E  81FAD501                  cmp dx,469d
00000442  7715                      ja eticolor12 ;JA=Jmp if Above (Brinca si esta arriba)
00000444  81F96E01                  cmp cx,366d
00000448  770F                      ja eticolor12
0000044A  81F95201                  cmp cx,338d
0000044E  7209                      jb eticolor12
00000450  2EC60600000E              mov colo, 0eh
00000456  E9D3FD                    jmp etip
00000459                        eticolor12:
00000459  81FAB901                  cmp dx,441d
0000045D  721B                      jb eticolor13 ;JB=Jump if Below (Brinca si esta abajo)
0000045F  81FAD501                  cmp dx,469d
00000463  7715                      ja eticolor13 ;JA=Jmp if Above (Brinca si esta arriba)
00000465  81F98C01                  cmp cx,396d
00000469  770F                      ja eticolor13
0000046B  81F97001                  cmp cx,368d
0000046F  7209                      jb eticolor13
00000471  2EC606000009              mov colo, 09h
00000477  E9B2FD                    jmp etip
0000047A                        eticolor13:
0000047A  81FAB901                  cmp dx,441d
0000047E  721B                      jb eticolor14 ;JB=Jump if Below (Brinca si esta abajo)
00000480  81FAD501                  cmp dx,469d
00000484  7715                      ja eticolor14 ;JA=Jmp if Above (Brinca si esta arriba)
00000486  81F9AA01                  cmp cx,426d
0000048A  770F                      ja eticolor14
0000048C  81F98E01                  cmp cx,398d
00000490  7209                      jb eticolor14
00000492  2EC60600000D              mov colo, 0dh
00000498  E991FD                    jmp etip
0000049B                        eticolor14:
0000049B  81FAB901                  cmp dx,441d
0000049F  721B                      jb eticolor15 ;JB=Jump if Below (Brinca si esta abajo)
000004A1  81FAD501                  cmp dx,469d
000004A5  7715                      ja eticolor15 ;JA=Jmp if Above (Brinca si esta arriba)
000004A7  81F9C801                  cmp cx,456d
000004AB  770F                      ja eticolor15
000004AD  81F9AC01                  cmp cx,428d
000004B1  7209                      jb eticolor15
000004B3  2EC60600000B              mov colo, 0bh
000004B9  E970FD                    jmp etip
000004BC                        eticolor15:
000004BC  81FAB901                  cmp dx,441d
000004C0  721B                      jb etiexitbut ;JB=Jump if Below (Brinca si esta abajo)
000004C2  81FAD501                  cmp dx,469d
000004C6  7715                      ja etiexitbut ;JA=Jmp if Above (Brinca si esta arriba)
000004C8  81F9E601                  cmp cx,486d
000004CC  770F                      ja etiexitbut
000004CE  81F9CA01                  cmp cx,458d
000004D2  7209                      jb etiexitbut
000004D4  2EC60600000F              mov colo, 0fh
000004DA  E94FFD                    jmp etip
000004DD                        etiexitbut:
000004DD  81FAAC01                  cmp dx,428d
000004E1  7215                      jb etitool1 ;JB=Jump if Below (Brinca si esta abajo)
000004E3  81FAD601                  cmp dx,470d
000004E7  770F                      ja etitool1 ;JA=Jmp if Above (Brinca si esta arriba)
000004E9  81F96C02                  cmp cx,620d
000004ED  7709                      ja etitool1
000004EF  81F94202                  cmp cx,578d
000004F3  7203                      jb etitool1
000004F5  E98601                    jmp fin
000004F8                        etitool1:
000004F8  83FA4D                    cmp dx,77d
000004FB  7218                      jb etitool2 ;JB=Jump if Below (Brinca si esta abajo)
000004FD  83FA7D                    cmp dx,125d
00000500  7713                      ja etitool2 ;JA=Jmp if Above (Brinca si esta arriba)
00000502  83F913                    cmp cx,19d
00000505  720E                      jb etitool2
00000507  83F943                    cmp cx,67d
0000050A  7709                      ja etitool2
0000050C  2EC606000001              mov tool,1d
00000512  E994FD                    jmp eti10
00000515                        etitool2:
00000515  83FA4D                    cmp dx,77d
00000518  7219                      jb etitool3 ;JB=Jump if Below (Brinca si esta abajo)
0000051A  83FA7D                    cmp dx,125d
0000051D  7714                      ja etitool3 ;JA=Jmp if Above (Brinca si esta arriba)
0000051F  83F961                    cmp cx,97d
00000522  720F                      jb etitool3
00000524  81F99100                  cmp cx,145d
00000528  7709                      ja etitool3
0000052A  2EC606000002              mov tool,2d
00000530  E976FD                    jmp eti10
00000533                        etitool3:
00000533  81FA8F00                  cmp dx,143d
00000537  7219                      jb etitool4 ;JB=Jump if Below (Brinca si esta abajo)
00000539  81FAC000                  cmp dx,192d
0000053D  7713                      ja etitool4 ;JA=Jmp if Above (Brinca si esta arriba)
0000053F  83F913                    cmp cx,19d
00000542  720E                      jb etitool4
00000544  83F943                    cmp cx,67d
00000547  7709                      ja etitool4
00000549  2EC606000003              mov tool,3d
0000054F  E957FD                    jmp eti10
00000552                        etitool4:
00000552  81FA8D00                  cmp dx,141d
00000556  721A                      jb etitool5 ;JB=Jump if Below (Brinca si esta abajo)
00000558  81FABD00                  cmp dx,189d
0000055C  7714                      ja etitool5 ;JA=Jmp if Above (Brinca si esta arriba)
0000055E  83F961                    cmp cx,97d
00000561  720F                      jb etitool5
00000563  81F99100                  cmp cx,145d
00000567  7709                      ja etitool5
00000569  2EC606000004              mov tool,4d
0000056F  E937FD                    jmp eti10
00000572                        etitool5:
00000572  81FAD000                  cmp dx,208d
00000576  7303E92EFD                jb eti10 ;JB=Jump if Below (Brinca si esta abajo)
0000057B  81FA0001                  cmp dx,256d
0000057F  7603E925FD                ja eti10 ;JA=Jmp if Above (Brinca si esta arriba)
00000584  83F914                    cmp cx,20d
00000587  7303E91DFD                jb eti10
0000058C  83F944                    cmp cx,68d
0000058F  7603E915FD                ja eti10
00000594  2EC606000005              mov tool,5d
0000059A  E90CFD                    jmp eti10
                                    
0000059D                        draw:
0000059D  2E803E000001              cmp tool,1
000005A3  7423                      je drawpen
000005A5  2E803E000002              cmp tool,2
000005AB  7453                      je draweraser
000005AD  2E803E000003              cmp tool,3
000005B3  7503E9C000                je drawsquare
000005B8  2E803E000004              cmp tool,4
000005BE  746C                      je drawspray
000005C0  2E803E000005              cmp tool,5
000005C6  7422                      je drawbrush
000005C8                        drawpen:
000005C8  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
000005CD  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
000005D2  E8AB01                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    ponpix col,ren ;Llama a la macro PONPIX para desplegar PIXEL
000005D5  B40C               1   mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
000005D7  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
000005DB  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
000005E0  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
000005E5  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)








000005E7  E942FC                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
000005EA                        drawbrush:
000005EA  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
000005EF  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
000005F4  E88901                    call apaga ;Llama al procedimiento APAGA para apagar el raton
000005F7  B90A00                    mov cx, 10d
                                    ; push cx
000005FA  E88900                    call brush

000005FD  E92CFC                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
00000600                        draweraser:
00000600  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000605  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
0000060A  E87301                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    borpix col,ren ;Llama a la macro borpix para desplegar PIXEL
0000060D  B40C               1      mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
0000060F  B00F               1      mov al,0fh ;AL=Atributos de color, parte baja : Blanco como el panel de fondo
00000611  2E8B0E0000         1      mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
00000616  2E8B160000         1      mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
0000061B  CD10               1      int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
0000061D  41                 1      inc cx
0000061E  CD10               1      int 10h
00000620  41                 1      inc cx
00000621  CD10               1      int 10h
00000623  41                 1      inc cx
00000624  CD10               1      int 10h
00000626  41                 1      inc cx
00000627  CD10               1      int 10h
00000629  E900FC                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
0000062C                        drawspray:
0000062C  2E890E0000                mov col,cx ;Carga en COL el valor de la columna
00000631  2E89160000                mov ren,dx ;Carga en REN el valor del renglon
00000636  E84701                    call apaga ;Llama al procedimiento APAGA para apagar el raton
                                    spraypix col,ren ;Llama a la macro spraypix para desplegar PIXEL
00000639  B40C               1   mov ah,0Ch ;Funcion 0Ch para pintar o desplegar PIXEL
0000063B  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
0000063F  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL
00000644  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL
00000649  51                 1   push cx
0000064A  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)
0000064C  83C102             1   add cx,2d
0000064F  CD10               1   int 10h
00000651  83C102             1   add cx,2d
00000654  CD10               1   int 10h
00000656  83C102             1   add cx,2d
00000659  CD10               1   int 10h
0000065B  59                 1   pop cx
0000065C  83EA02             1   sub dx,2d
0000065F  CD10               1   int 10h
00000661  83EA02             1   sub dx,2d
00000664  CD10               1   int 10h
00000666  83EA02             1   sub dx,2d
00000669  CD10               1   int 10h
0000066B  83EA02             1   sub dx,2d
0000066E  CD10               1   int 10h
00000670  83EA02             1   sub dx,2d
00000673  CD10               1   int 10h
00000675  E9B4FB                    jmp etip ;Salta incondicionalmente a etip y se cicla para esperar a que se oprima un boton
00000678                        drawsquare:
00000678  E82700                    call cuadro
0000067B  E9AEFB                    jmp etip
0000067E                        fin:
0000067E  E8FF00                 call apaga ;Apaga raton
00000681  E80901                 call cierragraf ;Cierra graficos
00000684  CD20                   int 20h ;Termina el programa

                                ;------------------ Inicia Zona de Procedimientos ----------------------
00000686                        brush proc ; Size is defined by cx value at start of procedure
00000686                            brush0:
00000686  51                        push cx
                                    ponpix col, ren
00000687  B40C               1   mov ah,0Ch ;Funcion 12d=0Ch para pintar o desplegar PIXEL
00000689  2EA00000           1   mov al,colo ;AL=Atributos de color, parte baja
0000068D  2E8B0E0000         1   mov cx,col ;Cx=Columna donde se despliega PIXEL (empieza desde cero)
00000692  2E8B160000         1   mov dx,ren ;Dx=Renglon donde se despliega PIXEL (empieza desde cero)
00000697  CD10               1   int 10h ;INT 10H funcion 0CH, despliega PIXEL de color en posicion CX (Columna), DX (Renglon)








00000699  2EFF060000                inc col
0000069E  59                        pop cx
0000069F  E2E5                      loop brush0
000006A1                            ret
000006A2                            brush endp
000006A2                        cuadro proc
000006A2  2E890E0000                mov col1,cx
000006A7  2E89160000                mov ren1,dx
000006AC                            cuad0:
000006AC  B80300                    mov ax,3d
000006AF  CD33                      int 33h
000006B1  83FB02                    cmp bx,2d
000006B4  75F6                      jne cuad0 ;Este ciclo (cuad0) solo termina si se oprime el botón Derecho
000006B6  81F9B200                  cmp cx,178d
000006BA  72F0                      jb cuad0 ;JB=Jump if Below (Brinca si esta abajo)
000006BC  81F97102                  cmp cx,625d
000006C0  77EA                      ja cuad0 ;JA=Jmp if Above (Brinca si esta arriba)
000006C2  81FA9801                  cmp dx,408d
000006C6  77E4                      ja cuad0
000006C8  83FA0F                    cmp dx,15d
000006CB  72DF                      jb cuad0
                                    ; Apagar mouse para poner pixeles debajo
000006CD  B80200                    mov ax, 2d
000006D0  CD33                      int 33h
000006D2  2E890E0000                mov col2,cx
000006D7  2E89160000                mov ren2,dx
000006DC  2E8B0E0000                mov cx,col1
000006E1  2E8B160000                mov dx,ren1
000006E6                            cuad1: ;Inicia proceso para dibujar linea superior horizontal
000006E6  B40C                      mov ah,0ch
000006E8  2EA00000                  mov al,colo
000006EC  CD10                      int 10h ; Pone el primer pixel
000006EE  2E3B0E0000                cmp cx, col2
000006F3  7303                      jae cuad1izq
000006F5  41                        inc cx
000006F6  EB01                      jmp cuad1val
000006F8                            cuad1izq:
000006F8  49                        dec cx
000006F9                            cuad1val:
000006F9  2E3B0E0000                cmp cx,col2
000006FE  75E6                      jne cuad1 ;JBE=Jump if not Equal
00000700  CD10                      int 10h
00000702  2E8B0E0000                mov cx,col1
00000707  2E8B160000                mov dx,ren2
0000070C                            cuad2: ;Inicia proceso para dibujar linea inferior horizontal
0000070C  B40C                      mov ah,0ch
0000070E  2EA00000                  mov al,colo
00000712  CD10                      int 10h
00000714  2E3B0E0000                cmp cx, col2
00000719  7303                      jae cuad2izq
0000071B  41                        inc cx
0000071C  EB01                      jmp cuad2val
0000071E                            cuad2izq:
0000071E  49                        dec cx
0000071F                            cuad2val:
0000071F  2E3B0E0000                cmp cx,col2
00000724  75E6                      jne cuad2
00000726  CD10                      int 10h
00000728  2E8B0E0000                mov cx,col1
0000072D  2E8B160000                mov dx,ren1
00000732                            cuad3: ;Inicia proceso para dibujar linea izquierda vertical
00000732  B40C                      mov ah,0ch
00000734  2EA00000                  mov al,colo
00000738  CD10                      int 10h
0000073A  2E3B160000                cmp dx, ren2
0000073F  7303                      jae cuad3up
00000741  42                        inc dx
00000742  EB01                      jmp cuad3val
00000744                            cuad3up:
00000744  4A                        dec dx
00000745                            cuad3val:
00000745  2E3B160000                cmp dx,ren2
0000074A  75E6                      jne cuad3
0000074C  CD10                      int 10h
0000074E  2E8B0E0000                mov cx,col2
00000753  2E8B160000                mov dx,ren1
00000758                            cuad4: ;Inicia proceso para dibujar linea derecha vertical
00000758  B40C                      mov ah,0ch
0000075A  2EA00000                  mov al,colo
0000075E  CD10                      int 10h
00000760  2E3B160000                cmp dx, ren2
00000765  7303                      jae cuad4up
00000767  42                        inc dx
00000768  EB01                      jmp cuad4val
0000076A                            cuad4up:
0000076A  4A                        dec dx
0000076B                            cuad4val:
0000076B  2E3B160000                cmp dx,ren2
00000770  75E6                      jne cuad4
00000772  CD10                      int 10h
00000774  B80200                    mov ax,2d
00000777  CD33                      int 33h
00000779                            ret
0000077A                            cuadro endp
0000077A                        prende proc
0000077A  B80100                 mov ax,1d
0000077D  CD33                   int 33h
0000077F                         ret
00000780                        apaga proc
00000780  B80200                 mov ax,2d
00000783  CD33                   int 33h
00000785                         ret
00000786                        inigraf proc
00000786  B400                   mov ah,0d
00000788  B012                   mov al,18d
0000078A  CD10                   int 10h
0000078C                         ret
0000078D                        cierragraf proc
0000078D  B400                   mov ah,0d
0000078F  B003                   mov al,3d
00000791  CD10                   int 10h
00000793                         ret 



Binary Map:

Segment                  Pos(file)     RVA  Size(fil) Size(mem)
---------------------------------------------------------------
CSEG                            0      100       694       694
---------------------------------------------------------------
                                                 694       694


Macros:

                N a m e                 Type

@CatStr  . . . . . . . . . . . .        Func
@Environ . . . . . . . . . . . .        Func
@InStr . . . . . . . . . . . . .        Func
@SizeStr . . . . . . . . . . . .        Func
@SubStr  . . . . . . . . . . . .        Func
ASDOUBLE . . . . . . . . . . . .        Func
ASFLOAT  . . . . . . . . . . . .        Func
CLASS  . . . . . . . . . . . . .        Proc
CMETHOD  . . . . . . . . . . . .        Proc
COMINTERFACE . . . . . . . . . .        Proc
CSTATIC  . . . . . . . . . . . .        Proc
CSTR . . . . . . . . . . . . . .        Func
CVIRTUAL . . . . . . . . . . . .        Proc
ENDCLASS . . . . . . . . . . . .        Proc
ENDCOMINTERFACE  . . . . . . . .        Proc
ENDMETHOD  . . . . . . . . . . .        Proc
ENDMETHODS . . . . . . . . . . .        Proc
ENDOINTERFACE  . . . . . . . . .        Proc
EXPAND_PREFIX  . . . . . . . . .        Func
FP10 . . . . . . . . . . . . . .        Func
FP4  . . . . . . . . . . . . . .        Func
FP8  . . . . . . . . . . . . . .        Func
GETMASK128 . . . . . . . . . . .        Proc
LOADMSD  . . . . . . . . . . . .        Proc
LOADMSS  . . . . . . . . . . . .        Proc
LOADPS . . . . . . . . . . . . .        Proc
LOADSD . . . . . . . . . . . . .        Proc
LOADSS . . . . . . . . . . . . .        Proc
MEMALIGN . . . . . . . . . . . .        Proc
MEMALLOC . . . . . . . . . . . .        Proc
MEMFREE  . . . . . . . . . . . .        Proc
METHOD . . . . . . . . . . . . .        Proc
MOV128 . . . . . . . . . . . . .        Proc
MOV64  . . . . . . . . . . . . .        Proc
MOVXMMR128 . . . . . . . . . . .        Proc
NOTMASK128 . . . . . . . . . . .        Proc
OINTERFACE . . . . . . . . . . .        Proc
R4P  . . . . . . . . . . . . . .        Func
R8P  . . . . . . . . . . . . . .        Func
REGS15STORAGE  . . . . . . . . .        Proc
REPARG . . . . . . . . . . . . .        Func
RV . . . . . . . . . . . . . . .        Func
SHIFTLEFT128 . . . . . . . . . .        Proc
SHIFTRIGHT128  . . . . . . . . .        Proc
SLXMMR . . . . . . . . . . . . .        Proc
SRXMMR . . . . . . . . . . . . .        Proc
STATICMETHOD . . . . . . . . . .        Proc
STATICVECMETHOD  . . . . . . . .        Proc
UINVOKE  . . . . . . . . . . . .        Func
VECMETHOD  . . . . . . . . . . .        Proc
WSTR . . . . . . . . . . . . . .        Func
_ARRAY . . . . . . . . . . . . .        Func
_DECLARE . . . . . . . . . . . .        Proc
_DELETE  . . . . . . . . . . . .        Proc
_DELETEARRAY . . . . . . . . . .        Proc
_DEREF . . . . . . . . . . . . .        Proc
_DEREFI  . . . . . . . . . . . .        Func
_I . . . . . . . . . . . . . . .        Func
_INVOKE  . . . . . . . . . . . .        Proc
_ITEM  . . . . . . . . . . . . .        Func
_ITEMR . . . . . . . . . . . . .        Func
_NEW . . . . . . . . . . . . . .        Func
_RBXNEW  . . . . . . . . . . . .        Func
_SINVOKE . . . . . . . . . . . .        Proc
_STATIC  . . . . . . . . . . . .        Func
_STATICREF . . . . . . . . . . .        Proc
_V . . . . . . . . . . . . . . .        Func
_VINVOKE . . . . . . . . . . . .        Proc
arginvoke  . . . . . . . . . . .        Func
borpix . . . . . . . . . . . . .        Proc
numero . . . . . . . . . . . . .        Proc
ponpix . . . . . . . . . . . . .        Proc
spraypix . . . . . . . . . . . .        Proc


Structures and Unions:

                N a m e                 Size/Ofs   Type

__m128 . . . . . . . . . . . . .              10
  f32  . . . . . . . . . . . . .               0   __m128f
  i8 . . . . . . . . . . . . . .               0   __m128b
  i16  . . . . . . . . . . . . .               0   __m128w
  i32  . . . . . . . . . . . . .               0   __m128i
  d64  . . . . . . . . . . . . .               0   __m128d
  q64  . . . . . . . . . . . . .               0   __m128q
__m128b  . . . . . . . . . . . .              10
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
__m128d  . . . . . . . . . . . .              10
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
__m128f  . . . . . . . . . . . .              10
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
__m128i  . . . . . . . . . . . .              10
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
__m128q  . . . . . . . . . . . .              10
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
__m128w  . . . . . . . . . . . .              10
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
__m256 . . . . . . . . . . . . .              20
  f32  . . . . . . . . . . . . .               0   __m256f
  i8 . . . . . . . . . . . . . .               0   __m256b
  i16  . . . . . . . . . . . . .               0   __m256w
  i32  . . . . . . . . . . . . .               0   __m256i
  d64  . . . . . . . . . . . . .               0   __m256d
  q64  . . . . . . . . . . . . .               0   __m256q
__m256b  . . . . . . . . . . . .              20
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
  b16  . . . . . . . . . . . . .              10   Byte
  b17  . . . . . . . . . . . . .              11   Byte
  b18  . . . . . . . . . . . . .              12   Byte
  b19  . . . . . . . . . . . . .              13   Byte
  b20  . . . . . . . . . . . . .              14   Byte
  b21  . . . . . . . . . . . . .              15   Byte
  b22  . . . . . . . . . . . . .              16   Byte
  b23  . . . . . . . . . . . . .              17   Byte
  b24  . . . . . . . . . . . . .              18   Byte
  b25  . . . . . . . . . . . . .              19   Byte
  b26  . . . . . . . . . . . . .              1A   Byte
  b27  . . . . . . . . . . . . .              1B   Byte
  b28  . . . . . . . . . . . . .              1C   Byte
  b29  . . . . . . . . . . . . .              1D   Byte
  b30  . . . . . . . . . . . . .              1E   Byte
  b31  . . . . . . . . . . . . .              1F   Byte
__m256d  . . . . . . . . . . . .              20
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
  d2 . . . . . . . . . . . . . .              10   
  d3 . . . . . . . . . . . . . .              18   
__m256f  . . . . . . . . . . . .              20
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
  f4 . . . . . . . . . . . . . .              10   
  f5 . . . . . . . . . . . . . .              14   
  f6 . . . . . . . . . . . . . .              18   
  f7 . . . . . . . . . . . . . .              1C   
__m256i  . . . . . . . . . . . .              20
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
  i4 . . . . . . . . . . . . . .              10   DWord
  i5 . . . . . . . . . . . . . .              14   DWord
  i6 . . . . . . . . . . . . . .              18   DWord
  i7 . . . . . . . . . . . . . .              1C   DWord
__m256q  . . . . . . . . . . . .              20
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
  q2 . . . . . . . . . . . . . .              10   QWord
  q3 . . . . . . . . . . . . . .              18   QWord
__m256w  . . . . . . . . . . . .              20
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
  w8 . . . . . . . . . . . . . .              10   Word
  w9 . . . . . . . . . . . . . .              12   Word
  w10  . . . . . . . . . . . . .              14   Word
  w11  . . . . . . . . . . . . .              16   Word
  w12  . . . . . . . . . . . . .              18   Word
  w13  . . . . . . . . . . . . .              1A   Word
  w14  . . . . . . . . . . . . .              1C   Word
  w15  . . . . . . . . . . . . .              1E   Word
__m512 . . . . . . . . . . . . .              40
  f32  . . . . . . . . . . . . .               0   __m512f
  i8 . . . . . . . . . . . . . .               0   __m512b
  i16  . . . . . . . . . . . . .               0   __m512w
  i32  . . . . . . . . . . . . .               0   __m512i
  d64  . . . . . . . . . . . . .               0   __m512d
  q64  . . . . . . . . . . . . .               0   __m512q
__m512b  . . . . . . . . . . . .              40
  b0 . . . . . . . . . . . . . .               0   Byte
  b1 . . . . . . . . . . . . . .               1   Byte
  b2 . . . . . . . . . . . . . .               2   Byte
  b3 . . . . . . . . . . . . . .               3   Byte
  b4 . . . . . . . . . . . . . .               4   Byte
  b5 . . . . . . . . . . . . . .               5   Byte
  b6 . . . . . . . . . . . . . .               6   Byte
  b7 . . . . . . . . . . . . . .               7   Byte
  b8 . . . . . . . . . . . . . .               8   Byte
  b9 . . . . . . . . . . . . . .               9   Byte
  b10  . . . . . . . . . . . . .               A   Byte
  b11  . . . . . . . . . . . . .               B   Byte
  b12  . . . . . . . . . . . . .               C   Byte
  b13  . . . . . . . . . . . . .               D   Byte
  b14  . . . . . . . . . . . . .               E   Byte
  b15  . . . . . . . . . . . . .               F   Byte
  b16  . . . . . . . . . . . . .              10   Byte
  b17  . . . . . . . . . . . . .              11   Byte
  b18  . . . . . . . . . . . . .              12   Byte
  b19  . . . . . . . . . . . . .              13   Byte
  b20  . . . . . . . . . . . . .              14   Byte
  b21  . . . . . . . . . . . . .              15   Byte
  b22  . . . . . . . . . . . . .              16   Byte
  b23  . . . . . . . . . . . . .              17   Byte
  b24  . . . . . . . . . . . . .              18   Byte
  b25  . . . . . . . . . . . . .              19   Byte
  b26  . . . . . . . . . . . . .              1A   Byte
  b27  . . . . . . . . . . . . .              1B   Byte
  b28  . . . . . . . . . . . . .              1C   Byte
  b29  . . . . . . . . . . . . .              1D   Byte
  b30  . . . . . . . . . . . . .              1E   Byte
  b31  . . . . . . . . . . . . .              1F   Byte
  b32  . . . . . . . . . . . . .              20   Byte
  b33  . . . . . . . . . . . . .              21   Byte
  b34  . . . . . . . . . . . . .              22   Byte
  b35  . . . . . . . . . . . . .              23   Byte
  b36  . . . . . . . . . . . . .              24   Byte
  b37  . . . . . . . . . . . . .              25   Byte
  b38  . . . . . . . . . . . . .              26   Byte
  b39  . . . . . . . . . . . . .              27   Byte
  b40  . . . . . . . . . . . . .              28   Byte
  b41  . . . . . . . . . . . . .              29   Byte
  b42  . . . . . . . . . . . . .              2A   Byte
  b43  . . . . . . . . . . . . .              2B   Byte
  b44  . . . . . . . . . . . . .              2C   Byte
  b45  . . . . . . . . . . . . .              2D   Byte
  b46  . . . . . . . . . . . . .              2E   Byte
  b47  . . . . . . . . . . . . .              2F   Byte
  b48  . . . . . . . . . . . . .              30   Byte
  b49  . . . . . . . . . . . . .              31   Byte
  b50  . . . . . . . . . . . . .              32   Byte
  b51  . . . . . . . . . . . . .              33   Byte
  b52  . . . . . . . . . . . . .              34   Byte
  b53  . . . . . . . . . . . . .              35   Byte
  b54  . . . . . . . . . . . . .              36   Byte
  b55  . . . . . . . . . . . . .              37   Byte
  b56  . . . . . . . . . . . . .              38   Byte
  b57  . . . . . . . . . . . . .              39   Byte
  b58  . . . . . . . . . . . . .              3A   Byte
  b59  . . . . . . . . . . . . .              3B   Byte
  b60  . . . . . . . . . . . . .              3C   Byte
  b61  . . . . . . . . . . . . .              3D   Byte
  b62  . . . . . . . . . . . . .              3E   Byte
  b63  . . . . . . . . . . . . .              3F   Byte
__m512d  . . . . . . . . . . . .              40
  d0 . . . . . . . . . . . . . .               0   
  d1 . . . . . . . . . . . . . .               8   
  d2 . . . . . . . . . . . . . .              10   
  d3 . . . . . . . . . . . . . .              18   
  d4 . . . . . . . . . . . . . .              20   
  d5 . . . . . . . . . . . . . .              28   
  d6 . . . . . . . . . . . . . .              30   
  d7 . . . . . . . . . . . . . .              38   
__m512f  . . . . . . . . . . . .              40
  f0 . . . . . . . . . . . . . .               0   
  f1 . . . . . . . . . . . . . .               4   
  f2 . . . . . . . . . . . . . .               8   
  f3 . . . . . . . . . . . . . .               C   
  f4 . . . . . . . . . . . . . .              10   
  f5 . . . . . . . . . . . . . .              14   
  f6 . . . . . . . . . . . . . .              18   
  f7 . . . . . . . . . . . . . .              1C   
  f8 . . . . . . . . . . . . . .              20   
  f9 . . . . . . . . . . . . . .              24   
  f10  . . . . . . . . . . . . .              28   
  f11  . . . . . . . . . . . . .              2C   
  f12  . . . . . . . . . . . . .              30   
  f13  . . . . . . . . . . . . .              34   
  f14  . . . . . . . . . . . . .              38   
  f15  . . . . . . . . . . . . .              3C   
__m512i  . . . . . . . . . . . .              40
  i0 . . . . . . . . . . . . . .               0   DWord
  i1 . . . . . . . . . . . . . .               4   DWord
  i2 . . . . . . . . . . . . . .               8   DWord
  i3 . . . . . . . . . . . . . .               C   DWord
  i4 . . . . . . . . . . . . . .              10   DWord
  i5 . . . . . . . . . . . . . .              14   DWord
  i6 . . . . . . . . . . . . . .              18   DWord
  i7 . . . . . . . . . . . . . .              1C   DWord
  i8 . . . . . . . . . . . . . .              20   DWord
  i9 . . . . . . . . . . . . . .              24   DWord
  i10  . . . . . . . . . . . . .              28   DWord
  i11  . . . . . . . . . . . . .              2C   DWord
  i12  . . . . . . . . . . . . .              30   DWord
  i13  . . . . . . . . . . . . .              34   DWord
  i14  . . . . . . . . . . . . .              38   DWord
  i15  . . . . . . . . . . . . .              3C   DWord
__m512q  . . . . . . . . . . . .              40
  q0 . . . . . . . . . . . . . .               0   QWord
  q1 . . . . . . . . . . . . . .               8   QWord
  q2 . . . . . . . . . . . . . .              10   QWord
  q3 . . . . . . . . . . . . . .              18   QWord
  q4 . . . . . . . . . . . . . .              20   QWord
  q5 . . . . . . . . . . . . . .              28   QWord
  q6 . . . . . . . . . . . . . .              30   QWord
  q7 . . . . . . . . . . . . . .              38   QWord
__m512w  . . . . . . . . . . . .              40
  w0 . . . . . . . . . . . . . .               0   Word
  w1 . . . . . . . . . . . . . .               2   Word
  w2 . . . . . . . . . . . . . .               4   Word
  w3 . . . . . . . . . . . . . .               6   Word
  w4 . . . . . . . . . . . . . .               8   Word
  w5 . . . . . . . . . . . . . .               A   Word
  w6 . . . . . . . . . . . . . .               C   Word
  w7 . . . . . . . . . . . . . .               E   Word
  w8 . . . . . . . . . . . . . .              10   Word
  w9 . . . . . . . . . . . . . .              12   Word
  w10  . . . . . . . . . . . . .              14   Word
  w11  . . . . . . . . . . . . .              16   Word
  w12  . . . . . . . . . . . . .              18   Word
  w13  . . . . . . . . . . . . .              1A   Word
  w14  . . . . . . . . . . . . .              1C   Word
  w15  . . . . . . . . . . . . .              1E   Word
  w16  . . . . . . . . . . . . .              20   Word
  w17  . . . . . . . . . . . . .              22   Word
  w18  . . . . . . . . . . . . .              24   Word
  w19  . . . . . . . . . . . . .              26   Word
  w20  . . . . . . . . . . . . .              28   Word
  w21  . . . . . . . . . . . . .              2A   Word
  w22  . . . . . . . . . . . . .              2C   Word
  w23  . . . . . . . . . . . . .              2E   Word
  w24  . . . . . . . . . . . . .              30   Word
  w25  . . . . . . . . . . . . .              32   Word
  w26  . . . . . . . . . . . . .              34   Word
  w27  . . . . . . . . . . . . .              36   Word
  w28  . . . . . . . . . . . . .              38   Word
  w29  . . . . . . . . . . . . .              3A   Word
  w30  . . . . . . . . . . . . .              3C   Word
  w31  . . . . . . . . . . . . .              3E   Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CSEG . . . . . . . . . . . . . .        16 Bit   0794     Para    Private ''


Procedures, parameters and locals:

                N a m e                 Type     Value    Segment  Length

apaga  . . . . . . . . . . . . .        P Near   0780     CSEG     0000 Public   
brush  . . . . . . . . . . . . .        P Near   0686     CSEG     001C Public   
  brush0 . . . . . . . . . . . .        L Near   0686     CSEG
cierragraf . . . . . . . . . . .        P Near   078D     CSEG     0000 Public   
cuadro . . . . . . . . . . . . .        P Near   06A2     CSEG     00D8 Public   
  cuad2  . . . . . . . . . . . .        L Near   070C     CSEG
  cuad2izq . . . . . . . . . . .        L Near   071E     CSEG
  cuad2val . . . . . . . . . . .        L Near   071F     CSEG
  cuad4val . . . . . . . . . . .        L Near   076B     CSEG
  cuad1val . . . . . . . . . . .        L Near   06F9     CSEG
  cuad3  . . . . . . . . . . . .        L Near   0732     CSEG
  cuad4up  . . . . . . . . . . .        L Near   076A     CSEG
  cuad1izq . . . . . . . . . . .        L Near   06F8     CSEG
  cuad0  . . . . . . . . . . . .        L Near   06AC     CSEG
  cuad3val . . . . . . . . . . .        L Near   0745     CSEG
  cuad4  . . . . . . . . . . . .        L Near   0758     CSEG
  cuad3up  . . . . . . . . . . .        L Near   0744     CSEG
  cuad1  . . . . . . . . . . . .        L Near   06E6     CSEG
inigraf  . . . . . . . . . . . .        P Near   0786     CSEG     0000 Public   
prende . . . . . . . . . . . . .        P Near   077A     CSEG     0000 Public   


Symbols:

                N a m e                 Type       Value     Attr

BuildDOS . . . . . . . . . . . .        Text   1
DosVGA . . . . . . . . . . . . .        Text   1
buffer . . . . . . . . . . . . .        Byte             157h CSEG 
cad  . . . . . . . . . . . . . .        Byte[66]         102h CSEG 
col  . . . . . . . . . . . . . .        Word             153h CSEG 
col1 . . . . . . . . . . . . . .        Word             15Ah CSEG 
col2 . . . . . . . . . . . . . .        Word             15Eh CSEG 
colo . . . . . . . . . . . . . .        Byte             158h CSEG 
draw . . . . . . . . . . . . . .        L Near           59Dh CSEG 
drawbrush  . . . . . . . . . . .        L Near           5EAh CSEG 
draweraser . . . . . . . . . . .        L Near           600h CSEG 
drawpen  . . . . . . . . . . . .        L Near           5C8h CSEG 
drawspray  . . . . . . . . . . .        L Near           62Ch CSEG 
drawsquare . . . . . . . . . . .        L Near           678h CSEG 
err  . . . . . . . . . . . . . .        L Near           21Eh CSEG 
eti0 . . . . . . . . . . . . . .        L Near           162h CSEG 
eti1 . . . . . . . . . . . . . .        L Near           177h CSEG 
eti10  . . . . . . . . . . . . .        L Near           2A9h CSEG 
eti2 . . . . . . . . . . . . . .        L Near           190h CSEG 
eticolor0  . . . . . . . . . . .        L Near           2D5h CSEG 
eticolor1  . . . . . . . . . . .        L Near           2F4h CSEG 
eticolor10 . . . . . . . . . . .        L Near           417h CSEG 
eticolor11 . . . . . . . . . . .        L Near           438h CSEG 
eticolor12 . . . . . . . . . . .        L Near           459h CSEG 
eticolor13 . . . . . . . . . . .        L Near           47Ah CSEG 
eticolor14 . . . . . . . . . . .        L Near           49Bh CSEG 
eticolor15 . . . . . . . . . . .        L Near           4BCh CSEG 
eticolor2  . . . . . . . . . . .        L Near           313h CSEG 
eticolor3  . . . . . . . . . . .        L Near           332h CSEG 
eticolor4  . . . . . . . . . . .        L Near           351h CSEG 
eticolor5  . . . . . . . . . . .        L Near           372h CSEG 
eticolor6  . . . . . . . . . . .        L Near           393h CSEG 
eticolor7  . . . . . . . . . . .        L Near           3B4h CSEG 
eticolor8  . . . . . . . . . . .        L Near           3D5h CSEG 
eticolor9  . . . . . . . . . . .        L Near           3F6h CSEG 
etiexitbut . . . . . . . . . . .        L Near           4DDh CSEG 
etip . . . . . . . . . . . . . .        L Near           22Ch CSEG 
etitool1 . . . . . . . . . . . .        L Near           4F8h CSEG 
etitool2 . . . . . . . . . . . .        L Near           515h CSEG 
etitool3 . . . . . . . . . . . .        L Near           533h CSEG 
etitool4 . . . . . . . . . . . .        L Near           552h CSEG 
etitool5 . . . . . . . . . . . .        L Near           572h CSEG 
filename . . . . . . . . . . . .        Byte[13]         144h CSEG 
fin  . . . . . . . . . . . . . .        L Near           67Eh CSEG 
handle . . . . . . . . . . . . .        Word             151h CSEG 
ren  . . . . . . . . . . . . . .        Word             155h CSEG 
ren1 . . . . . . . . . . . . . .        Word             15Ch CSEG 
ren2 . . . . . . . . . . . . . .        Word             160h CSEG 
start  . . . . . . . . . . . . .        L Near           22Ch CSEG 
tool . . . . . . . . . . . . . .        Byte             159h CSEG 

prog12.asm: 644 lines, 2 passes, 14 ms, 0 warnings, 0 errors
